// Generated by Haxe 3.4.0
(function ($hx_exports, $global) { "use strict";
$hx_exports["com"] = $hx_exports["com"] || {};
$hx_exports["com"]["trackware"] = $hx_exports["com"]["trackware"] || {};
$hx_exports["com"]["trackware"]["simulation"] = $hx_exports["com"]["trackware"]["simulation"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.array = function(it) {
	var a = [];
	var i = $iterator(it)();
	while(i.hasNext()) {
		var i1 = i.next();
		a.push(i1);
	}
	return a;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
Math.__name__ = ["Math"];
var Random = function() { };
$hxClasses["Random"] = Random;
Random.__name__ = ["Random"];
Random.bool = function() {
	return Math.random() < 0.5;
};
Random["int"] = function(from,to) {
	return from + Math.floor((to - from + 1) * Math.random());
};
Random["float"] = function(from,to) {
	return from + (to - from) * Math.random();
};
Random.string = function(length,charactersToUse) {
	if(charactersToUse == null) {
		charactersToUse = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
	}
	var str = "";
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		str += charactersToUse.charAt(Math.floor((charactersToUse.length - 1 + 1) * Math.random()));
	}
	return str;
};
Random.date = function(earliest,latest) {
	var from = earliest.getTime();
	var t = from + (latest.getTime() - from) * Math.random();
	return new Date(t);
};
Random.fromArray = function(arr) {
	if(arr != null && arr.length > 0) {
		return arr[Math.floor((arr.length - 1 + 1) * Math.random())];
	} else {
		return null;
	}
};
Random.shuffle = function(arr) {
	if(arr != null) {
		var _g1 = 0;
		var _g = arr.length;
		while(_g1 < _g) {
			var i = _g1++;
			var j = Math.floor((arr.length - 1 + 1) * Math.random());
			var a = arr[i];
			var b = arr[j];
			arr[i] = b;
			arr[j] = a;
		}
	}
	return arr;
};
Random.fromIterable = function(it) {
	if(it != null) {
		var arr = Lambda.array(it);
		if(arr != null && arr.length > 0) {
			return arr[Math.floor((arr.length - 1 + 1) * Math.random())];
		} else {
			return null;
		}
	} else {
		return null;
	}
};
Random.enumConstructor = function(e) {
	if(e != null) {
		var arr = e.__empty_constructs__;
		if(arr != null && arr.length > 0) {
			return arr[Math.floor((arr.length - 1 + 1) * Math.random())];
		} else {
			return null;
		}
	} else {
		return null;
	}
};
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	__class__: StringBuf
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
ValueType.__empty_constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) {
		return null;
	}
	return e;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var com_trackware_Channel = function(aTopicName,aSocket) {
	this.channel = aSocket.channel(aTopicName);
	this.topic = aTopicName;
};
$hxClasses["com.trackware.Channel"] = com_trackware_Channel;
com_trackware_Channel.__name__ = ["com","trackware","Channel"];
com_trackware_Channel.prototype = {
	get_channel: function() {
		return this.channel;
	}
	,join: function(params) {
		var join = this.get_channel().join();
		join.receive("ok",$bind(this,this.joined));
		join.receive("error",$bind(this,this.error_joining));
		return join;
	}
	,leave: function() {
		var leave = this.get_channel().leave();
		leave.receive("ok",$bind(this,this.leaved));
		leave.receive("error",$bind(this,this.error_leaving));
	}
	,push: function(message,params) {
		var pushResult = this.get_channel().push(message,params);
		com_trackware_Main.counts++;
		pushResult.receive("error",function(e) {
			window.console.log(e);
		});
		pushResult.receive("ok",function(e1) {
			window.console.log(e1);
		});
	}
	,error_joining: function(reason) {
		window.console.log("join failed",reason);
	}
	,leaved: function(response) {
		window.console.log("leaved " + this.topic);
	}
	,error_leaving: function(reason) {
		window.console.log("leaving " + this.topic,reason);
	}
	,joined: function(response) {
		window.console.log("joined!: " + this.topic);
	}
	,__class__: com_trackware_Channel
	,__properties__: {get_channel:"get_channel"}
};
var com_trackware_HistoryManager = $hx_exports["com"]["trackware"]["HistoryManager"] = function() {
};
$hxClasses["com.trackware.HistoryManager"] = com_trackware_HistoryManager;
com_trackware_HistoryManager.__name__ = ["com","trackware","HistoryManager"];
com_trackware_HistoryManager.__properties__ = {get_instance:"get_instance"}
com_trackware_HistoryManager.get_instance = function() {
	if(com_trackware_HistoryManager.instance == null) {
		com_trackware_HistoryManager.instance = new com_trackware_HistoryManager();
	}
	return com_trackware_HistoryManager.instance;
};
com_trackware_HistoryManager.prototype = {
	ini: function() {
	}
	,drawUserRouteHistory: function(apiKey,phoenixIP,apiServerIP,aUserID,aOrganizationID,aUserSourecLatLong,aDateSTR,aStartTimeSTR,aEndTimeSTR,token) {
		var _gthis = this;
		com_trackware_Main.google_maps_api_key = apiKey;
		var user_info_promise = this.getUserInfo(aUserID);
		user_info_promise.then(function(aChannel) {
			var time_offset_promise = _gthis.getTimeOffset(aUserSourecLatLong);
			time_offset_promise.then(function(aTimeOffset) {
				var timeoffset = aTimeOffset;
				var dateDelimiter = "-";
				var timeDelimiter = ":";
				var aDateArray = aDateSTR.split(dateDelimiter);
				var startTimeArray = aStartTimeSTR.split(timeDelimiter);
				var endTimeArray = aEndTimeSTR.split(timeDelimiter);
				var Year = Std.parseInt(aDateArray[0]);
				var Month = Std.parseInt(aDateArray[1]);
				var Day = Std.parseInt(aDateArray[2]);
				var startHoure = Std.parseInt(startTimeArray[0]);
				var endHoure = Std.parseInt(endTimeArray[0]);
				var startMinute = Std.parseInt(startTimeArray[1]);
				var endMinute = Std.parseInt(endTimeArray[1]);
				var startSecond = Std.parseInt(startTimeArray[2]);
				var endSecond = Std.parseInt(endTimeArray[2]);
				var strStartDate = HxOverrides.substr(Std.string(Date.UTC(Year,Month - 1,Day,startHoure,startMinute,startSecond - timeoffset)),0,10);
				var aStartDate = parseFloat(strStartDate);
				var strEndDate = HxOverrides.substr(Std.string(Date.UTC(Year,Month - 1,Day,endHoure,endMinute,endSecond - timeoffset)),0,10);
				var aEndDate = parseFloat(strEndDate);
				_gthis.uid = aUserID;
				var date = Year + "-" + Month + "-" + Day;
				_gthis.start_datetime = date + " " + startTimeArray[0] + ":" + startTimeArray[1] + ":" + startTimeArray[2];
				_gthis.end_datetime = date + " " + endTimeArray[0] + ":" + endTimeArray[1] + ":" + endTimeArray[2];
				_gthis.token = token;
				_gthis.getHistory(phoenixIP,apiServerIP,aUserID,aOrganizationID,date,aStartDate,aEndDate);
			},function(reason) {
				window.console.log("time_offset_promise rejected");
			});
		});
	}
	,getUserInfo: function(aUserID) {
		var infoRequest = new XMLHttpRequest();
		infoRequest.open("POST","api/user-info");
		infoRequest.setRequestHeader("Authorization",com_trackware_Main.token);
		var formData = new FormData();
		formData.append("user_id",aUserID == null ? "null" : "" + aUserID);
		infoRequest.send(formData);
		var user_info_promise = new Promise(function(resolve,reject) {
			infoRequest.onload = function(aData) {
				if(infoRequest.status == 200) {
					var data = JSON.parse(infoRequest.response);
					resolve(data.channel);
				} else if(infoRequest.status == 400) {
					js_Browser.alert("Session expired, try to refresh your page");
					reject("Session expired, try to refresh your page");
				} else {
					js_Browser.alert("Error " + (infoRequest.status == null ? "null" : "" + infoRequest.status) + ", Try to refresh your page");
					reject(infoRequest.status);
				}
			};
			infoRequest.onerror = function(msg) {
				reject(msg);
			};
		});
		return user_info_promise;
	}
	,getTimeOffset: function(aUserSourecLatLong) {
		var _gthis = this;
		var infoRequest = new XMLHttpRequest();
		infoRequest.open("GET","https://maps.googleapis.com/maps/api/timezone/json?" + "location=" + aUserSourecLatLong + "&timestamp=" + 0 + "&key=" + com_trackware_Main.google_maps_api_key);
		var time_offset_promise = new Promise(function(resolve,reject) {
			infoRequest.onload = function(aData) {
				var data = JSON.parse(infoRequest.response);
				if(infoRequest.status == 200) {
					resolve(data.rawOffset);
				} else if(infoRequest.status == 400) {
					js_Browser.alert("Session expired, try to refresh your page");
					reject("Session expired, try to refresh your page");
				} else {
					js_Browser.alert("Error " + (infoRequest.status == null ? "null" : "" + infoRequest.status) + ", Try to refresh your page");
					reject(infoRequest.status);
				}
				_gthis.isLoading = true;
			};
			infoRequest.onerror = function(msg) {
				reject(msg);
			};
		});
		infoRequest.send();
		this.isLoading = true;
		return time_offset_promise;
	}
	,getHistory: function(phoenixIP,apiServerIP,aUserID,aOrganizationID,aDate,aStartTime,aEndTime) {
		var _gthis = this;
		var pointsReceived = this.getPoints(phoenixIP,aUserID,aOrganizationID,aDate,aStartTime,aEndTime);
		pointsReceived.then(function(aPointsReceived) {
			_gthis.startDrawing(aPointsReceived,apiServerIP);
		});
	}
	,getPoints: function(phoenixIP,aUserID,aOrganizationID,aDate,aStartTime,aEndTime) {
		var infoRequest = new XMLHttpRequest();
		infoRequest.open("POST",phoenixIP + "api/route");
		infoRequest.setRequestHeader("Authorization",this.token);
		var formData = new FormData();
		formData.append("organization_id",aOrganizationID == null ? "null" : "" + aOrganizationID);
		formData.append("user_id",aUserID == null ? "null" : "" + aUserID);
		formData.append("date",aDate == null ? "null" : "" + aDate);
		formData.append("start_unix_time",aStartTime == null ? "null" : "" + aStartTime);
		formData.append("end_unix_time",aEndTime == null ? "null" : "" + aEndTime);
		infoRequest.send(formData);
		var user_points_promise = new Promise(function(resolve,reject) {
			infoRequest.onload = function(aData) {
				if(infoRequest.status == 200) {
					var data = JSON.parse(infoRequest.response);
					resolve(data.route);
				} else if(infoRequest.status == 400) {
					js_Browser.alert("Session expired, try to refresh your page");
					reject("Session expired, try to refresh your page");
				} else {
					js_Browser.alert("Error " + (infoRequest.status == null ? "null" : "" + infoRequest.status) + ", Try to refresh your page");
					reject(infoRequest.status);
				}
			};
			infoRequest.onerror = function(msg) {
				reject(msg);
			};
		});
		return user_points_promise;
	}
	,startDrawing: function(points,apiServerIP) {
		var pointsCount = points.length;
		var routeCoordinates = [];
		var _g1 = 0;
		var _g = pointsCount;
		while(_g1 < _g) {
			var i = _g1++;
			routeCoordinates.push(new google.maps.LatLng(points[i][0],points[i][1],0));
		}
		var mapDom = $("#map");
		var map = new google.maps.Map(mapDom[0],{ center : routeCoordinates[0], zoom : 10});
		var route = new google.maps.Polyline({ map : map, path : routeCoordinates, geodesic : true, strokeColor : "#FF0000", strokeOpacity : 1.0, strokeWeight : 2});
		var marker = new google.maps.Marker({ position : routeCoordinates[routeCoordinates.length - 1], map : map, title : "User is here now"});
		var user_max_speed_promise = this.getMaxSpeedPoint(apiServerIP);
		user_max_speed_promise.then(function(aMaxSpeedInfo) {
			var speedingPosition = new google.maps.LatLng(aMaxSpeedInfo.lat,aMaxSpeedInfo.lng,0);
			var image = { url : "/D/content/images/speed_limit.png", scaledSize : new google.maps.Size(35,35)};
			var marker1 = new google.maps.Marker({ position : speedingPosition, map : map, title : "Max speed exceeded here. Speed: " + Std.string(aMaxSpeedInfo.speed), label : aMaxSpeedInfo.speed, icon : image});
			js.JQuery("#speed").html("<h4>" + Std.string(aMaxSpeedInfo.speed) + " km/h</h4>");
		});
		var user_standstill_promise = this.getStandstillPoints(apiServerIP);
		user_standstill_promise.then(function(aStandstillInfo) {
			var _g2 = 0;
			while(_g2 < aStandstillInfo.length) {
				var entry = aStandstillInfo[_g2];
				++_g2;
				entry = JSON.parse(entry);
				var standstillPosition = new google.maps.LatLng(entry.lat,entry.lng,0);
				var image1 = { url : "/D/content/images/stand.png", scaledSize : new google.maps.Size(20,50)};
				var marker2 = [new google.maps.Marker({ position : standstillPosition, map : map, icon : image1, title : "The user stood still in here. Exceeded time: " + Std.string(entry.threshold) + " minutes."})];
				var contentString = "<div id=\"bodyContent\">" + "<p><b>Exceeded " + Std.string(entry.threshold) + " minutes.</b></p>" + "</div>";
				var infowindow = [new google.maps.InfoWindow({ content : contentString})];
				var tmp = (function(infowindow1,marker3) {
					return function() {
						infowindow1[0].open(map,marker3[0]);
					};
				})(infowindow,marker2);
				marker2[0].addListener("click",tmp);
			}
		});
		var user_userplaces_promise = this.getUserPlaces(apiServerIP);
		user_userplaces_promise.then(function(aUserPlacesInfo) {
			var html = "";
			var _g3 = 0;
			while(_g3 < aUserPlacesInfo.length) {
				var entry1 = aUserPlacesInfo[_g3];
				++_g3;
				var checked = "ERROR";
				if(entry1.into == true) {
					checked = "into";
				} else {
					checked = "out of";
				}
				var penentration_point = JSON.parse(entry1.st_asgeojson);
				html += "<li>" + "<div class='block'>" + "<div class='block_content'>" + "<h2 class='title'>" + "<a>Checked " + checked + " place at: " + Std.string(entry1.created_at) + ".</a>" + "</h2>" + "<div class='byline'>" + "<span>Place ID</span>: <a>" + Std.string(entry1.place_id) + ".</a>" + "</div>" + "<p class='excerpt'>Penetration point: " + penentration_point.coordinates + "</a>" + "</p>" + "</div>" + "</div>" + "</li>" + "<li>";
			}
			js.JQuery("#userplaces").html(html);
		});
		var user_customersite_promise = this.getCustomersSites(apiServerIP);
		user_customersite_promise.then(function(aCustomerSiteInfo) {
			var html1 = "";
			var _g4 = 0;
			while(_g4 < aCustomerSiteInfo.length) {
				var entry2 = aCustomerSiteInfo[_g4];
				++_g4;
				html1 += "<li>" + "<div class='block'>" + "<div class='block_content'>" + "<h2 class='title'>" + "<a>Checked in at: " + Std.string(entry2.checked_in_at) + " and checked out at: " + Std.string(entry2.checked_out_at) + ".</a>" + "</h2>" + "<div class='byline'>" + "<span>Customer name</span>: <a>" + Std.string(entry2.name) + ".</a>" + "</div>" + "<p class='excerpt'>Example description bla bla etc...</a>" + "</p>" + "</div>" + "</div>" + "</li>" + "<li>";
				var customersitePosition = new google.maps.LatLng(entry2["long"],entry2.lat,0);
				var image2 = { url : "/D/content/images/default_customer.png", scaledSize : new google.maps.Size(40,40)};
				var marker4 = [new google.maps.Marker({ position : customersitePosition, map : map, title : "Customer Name: " + Std.string(entry2.name), icon : image2})];
				var contentString1 = "<div id=\"content\">" + "<div id=\"siteNotice\">" + "</div>" + "<h1 id=\"firstHeading\" class=\"firstHeading\">" + Std.string(entry2.name) + ".</h1>" + "<div id=\"bodyContent\">" + "<p><b>Checked in at</b>: " + Std.string(entry2.checked_in_at) + " <b></br>Checked out at</b>: " + Std.string(entry2.checked_out_at) + ".</p>" + "<p><a href=\"http://localhost:8000/visits\" target=\"_blank\">" + "<b>View more details</b></a></p>" + "</div>" + "</div>";
				var infowindow2 = [new google.maps.InfoWindow({ content : contentString1})];
				var tmp1 = (function(infowindow3,marker5) {
					return function() {
						infowindow3[0].open(map,marker5[0]);
					};
				})(infowindow2,marker4);
				marker4[0].addListener("click",tmp1);
			}
			js.JQuery("#customersite").html(html1);
		});
	}
	,getMaxSpeedPoint: function(apiServerIP) {
		var infoRequest = new XMLHttpRequest();
		infoRequest.open("POST",apiServerIP + "api/history/max/speed");
		infoRequest.setRequestHeader("Authorization",this.token);
		var formData = new FormData();
		formData.append("uid",Std.string(this.uid));
		formData.append("start_date_time",Std.string(this.start_datetime));
		formData.append("end_date_time",Std.string(this.end_datetime));
		infoRequest.send(formData);
		var user_max_speed_promise = new Promise(function(resolve,reject) {
			infoRequest.onload = function(aData) {
				if(infoRequest.status == 200) {
					if(infoRequest.response == "") {
						console.log("Empty!");
					}
					var data = JSON.parse(infoRequest.response);
					resolve(data);
				} else if(infoRequest.status == 400) {
					js_Browser.alert("Session expired, try to refresh your page");
					reject("Session expired, try to refresh your page");
				} else {
					js_Browser.alert("Error " + (infoRequest.status == null ? "null" : "" + infoRequest.status) + ", Try to refresh your page");
					reject(infoRequest.status);
				}
			};
			infoRequest.onerror = function(msg) {
				reject(msg);
			};
		});
		return user_max_speed_promise;
	}
	,getStandstillPoints: function(apiServerIP) {
		var infoRequest = new XMLHttpRequest();
		infoRequest.open("POST",apiServerIP + "api/history/standstill");
		infoRequest.setRequestHeader("Authorization",this.token);
		var formData = new FormData();
		formData.append("uid",Std.string(this.uid));
		formData.append("start_date_time",Std.string(this.start_datetime));
		formData.append("end_date_time",Std.string(this.end_datetime));
		infoRequest.send(formData);
		var user_standstill_promise = new Promise(function(resolve,reject) {
			infoRequest.onload = function(aData) {
				if(infoRequest.status == 200) {
					if(infoRequest.response == "") {
						console.log("Empty!");
					}
					var data = JSON.parse(infoRequest.response);
					resolve(data);
				} else if(infoRequest.status == 400) {
					js_Browser.alert("Session expired, try to refresh your page");
					reject("Session expired, try to refresh your page");
				} else {
					js_Browser.alert("Error " + (infoRequest.status == null ? "null" : "" + infoRequest.status) + ", Try to refresh your page");
					reject(infoRequest.status);
				}
			};
			infoRequest.onerror = function(msg) {
				reject(msg);
			};
		});
		return user_standstill_promise;
	}
	,getCustomersSites: function(apiServerIP) {
		var infoRequest = new XMLHttpRequest();
		infoRequest.open("POST",apiServerIP + "api/history/customersite");
		infoRequest.setRequestHeader("Authorization",this.token);
		var formData = new FormData();
		formData.append("uid",Std.string(this.uid));
		formData.append("start_date_time",Std.string(this.start_datetime));
		formData.append("end_date_time",Std.string(this.end_datetime));
		infoRequest.send(formData);
		var user_customersite_promise = new Promise(function(resolve,reject) {
			infoRequest.onload = function(aData) {
				if(infoRequest.status == 200) {
					if(infoRequest.response == "") {
						console.log("Empty!");
					}
					var data = JSON.parse(infoRequest.response);
					resolve(data);
				} else if(infoRequest.status == 400) {
					js_Browser.alert("Session expired, try to refresh your page");
					reject("Session expired, try to refresh your page");
				} else {
					js_Browser.alert("Error " + (infoRequest.status == null ? "null" : "" + infoRequest.status) + ", Try to refresh your page");
					reject(infoRequest.status);
				}
			};
			infoRequest.onerror = function(msg) {
				reject(msg);
			};
		});
		return user_customersite_promise;
	}
	,getUserPlaces: function(apiServerIP) {
		var infoRequest = new XMLHttpRequest();
		infoRequest.open("POST",apiServerIP + "api/history/userplaces");
		infoRequest.setRequestHeader("Authorization",this.token);
		var formData = new FormData();
		formData.append("uid",Std.string(this.uid));
		formData.append("start_date_time",Std.string(this.start_datetime));
		formData.append("end_date_time",Std.string(this.end_datetime));
		infoRequest.send(formData);
		var user_customersite_promise = new Promise(function(resolve,reject) {
			infoRequest.onload = function(aData) {
				if(infoRequest.status == 200) {
					if(infoRequest.response == "") {
						console.log("Empty!");
					}
					var data = JSON.parse(infoRequest.response);
					resolve(data);
				} else if(infoRequest.status == 400) {
					js_Browser.alert("Session expired, try to refresh your page");
					reject("Session expired, try to refresh your page");
				} else {
					js_Browser.alert("Error " + (infoRequest.status == null ? "null" : "" + infoRequest.status) + ", Try to refresh your page");
					reject(infoRequest.status);
				}
			};
			infoRequest.onerror = function(msg) {
				reject(msg);
			};
		});
		return user_customersite_promise;
	}
	,__class__: com_trackware_HistoryManager
};
var com_trackware_Loader = function(aChannel) {
	this.channel = aChannel;
};
$hxClasses["com.trackware.Loader"] = com_trackware_Loader;
com_trackware_Loader.__name__ = ["com","trackware","Loader"];
com_trackware_Loader.prototype = {
	askForUsers: function(aTeamID) {
		var _gthis = this;
		var infoRequest = new XMLHttpRequest();
		infoRequest.open("POST","/api/team/" + (aTeamID == null ? "null" : "" + aTeamID) + "/users");
		infoRequest.setRequestHeader("Authorization",com_trackware_Main.token);
		infoRequest.onerror = function(msg) {
		};
		infoRequest.onload = function(aData) {
			if(infoRequest.status == 200) {
				var data = JSON.parse(infoRequest.response);
				com_trackware_Main.token = infoRequest.getResponseHeader("Authorization");
				_gthis.channel.setUsers(data);
			} else if(infoRequest.status == 400) {
				js_Browser.alert("Session expired, try to refresh your page");
			} else {
				js_Browser.alert("Error " + (infoRequest.status == null ? "null" : "" + infoRequest.status) + ", Try to refresh your page");
			}
			_gthis.isLoading = true;
		};
		infoRequest.send();
		this.isLoading = true;
	}
	,__class__: com_trackware_Loader
};
var com_trackware_Main = $hx_exports["com"]["trackware"]["Main"] = function() { };
$hxClasses["com.trackware.Main"] = com_trackware_Main;
com_trackware_Main.__name__ = ["com","trackware","Main"];
com_trackware_Main.main = function() {
	com_trackware_HistoryManager.get_instance().ini();
	com_trackware_simulation_VirtualRound.get_instance();
};
com_trackware_Main.iniCallback = function() {
	console.log("0");
	var phoenix_element = window.document.getElementById("phoenix");
	if(phoenix_element == null) {
		console.log("1");
		haxe_Timer.delay(com_trackware_Main.iniCallback,100);
	} else {
		console.log("2");
		com_trackware_Main.phoenix_app_url = window.document.getElementById("phoenix").getAttribute("url");
		if(com_trackware_Main.phoenix_app_url == null) {
			console.log("3");
			haxe_Timer.delay(com_trackware_Main.iniCallback,100);
		} else {
			console.log("4");
			google.maps.event.addDomListener(window, "load", com.trackware.Main.ini());
		}
	}
};
com_trackware_Main.ini = function() {
	if(com_trackware_Main.socketCreator == null) {
		haxe_Timer.delay(com_trackware_Main.ini,100);
	} else {
		var map = com_trackware_Map.get_instance();
		var usersManager = com_trackware_UsersManager.get_instance();
		var nodesManager = com_trackware_NodesManager.get_instance();
		try {
			map.ini();
		} catch( err ) {
			haxe_Timer.delay(function() {
				var map1 = com_trackware_Map.get_instance();
				com_trackware_Main.ini();
			},500);
		}
	}
};
com_trackware_Main.ini_user = function(aSocketCreator) {
	com_trackware_Main.socketCreator = aSocketCreator;
	var userId = Math.floor(Math.random() * 1000000 + 1);
};
com_trackware_Main.socket_log = function(kind,msg,data) {
};
var com_trackware_Map = $hx_exports["com"]["trackware"]["Map"] = function() {
	this.points = [];
	this.lng = null;
	this.lat = null;
	this.channels = new haxe_ds_StringMap();
	this.setLatLong();
};
$hxClasses["com.trackware.Map"] = com_trackware_Map;
com_trackware_Map.__name__ = ["com","trackware","Map"];
com_trackware_Map.__properties__ = {get_instance:"get_instance"}
com_trackware_Map.get_instance = function() {
	if(com_trackware_Map.instance == null) {
		com_trackware_Map.instance = new com_trackware_Map();
	}
	return com_trackware_Map.instance;
};
com_trackware_Map.prototype = {
	get_lat: function() {
		return this.lat;
	}
	,get_lng: function() {
		return this.lng;
	}
	,ini: function() {
		this.initMap();
		this.iniPhoenixClient();
	}
	,setLatLong: function() {
		var _gthis = this;
		if(window.navigator.geolocation != null) {
			window.navigator.geolocation.getCurrentPosition(function(position) {
				var locationMarker = null;
				if(locationMarker) {
					return;
				}
				var o = position.coords;
				var tmp;
				var tmp1;
				if(o == null) {
					tmp1 = null;
				} else {
					var tmp2;
					if(o.__properties__) {
						tmp = o.__properties__["get_" + "latitude"];
						tmp2 = tmp;
					} else {
						tmp2 = false;
					}
					if(tmp2) {
						tmp1 = o[tmp]();
					} else {
						tmp1 = o["latitude"];
					}
				}
				_gthis.lat = js_Boot.__cast(tmp1 , Float);
				var o1 = position.coords;
				var tmp3;
				var tmp4;
				if(o1 == null) {
					tmp4 = null;
				} else {
					var tmp5;
					if(o1.__properties__) {
						tmp3 = o1.__properties__["get_" + "longitude"];
						tmp5 = tmp3;
					} else {
						tmp5 = false;
					}
					if(tmp5) {
						tmp4 = o1[tmp3]();
					} else {
						tmp4 = o1["longitude"];
					}
				}
				_gthis.lng = js_Boot.__cast(tmp4 , Float);
				var user = com_trackware_map_User;
			},function(error) {
				window.console.log("Error!: ",error);
				var options = { zoom : 2, center : { lat : 31.9566, lng : 35.9457, alt : 0}};
				_gthis.map.setOptions(options);
				js_Browser.alert("Could not reach your location. Please check your browser settings.");
			},{ enableHighAccuracy : true});
		}
	}
	,iniPhoenixClient: function() {
		var _gthis = this;
		window.console.log("ini phoenix client");
		var infoRequest = new XMLHttpRequest();
		infoRequest.onreadystatechange = function() {
			if(infoRequest.readyState == 4 && infoRequest.status == 200) {
				var response = JSON.parse(infoRequest.response);
				com_trackware_Main.token = "Bearer " + response.jwt_token;
				com_trackware_Main.user_id = response.user_id;
				com_trackware_Main.google_maps_api_key = "";
				_gthis.socket = com_trackware_Main.socketCreator.createSocket({ token : response.jwt_token, fake_user_id : 0},com_trackware_Main.phoenix_app_url);
				_gthis.socket.connect();
				window.console.log(com_trackware_Main.user_id);
				var solo_channel = new com_trackware_Topic("users:" + Std.string(com_trackware_Main.user_id));
				solo_channel.listen(true);
			}
		};
		infoRequest.open("GET","api/get-pubsub-keys",true);
		infoRequest.send();
	}
	,initMap: function() {
		var map_line;
		var marker;
		var options = { };
		if(this.get_lat() == null) {
			this.lat = 31.977631;
			this.lng = 35.843258;
			options = { zoom : 15, center : { lat : this.get_lat(), lng : this.get_lng(), alt : 0}};
		} else {
			options = { zoom : 15, center : { lat : this.get_lat(), lng : this.get_lng(), alt : 0}};
		}
		window.console.log("new google.maps.Map",options);
		this.map = new google.maps.Map(window.document.getElementById("map-canvas"),options);	
		this.map.addListener("click",$bind(this,this.onLeftClick));
		this.map.addListener("rightclick",$bind(this,this.onRightClick));
	}
	,onLeftClick: function(e) {
		com_trackware_simulation_VirtualRound.get_instance().mapClicked(e.latLng.lat(),e.latLng.lng(),false);
	}
	,onRightClick: function(e) {
		com_trackware_simulation_VirtualRound.get_instance().mapClicked(e.latLng.lat(),e.latLng.lng(),true);
	}
	,setGroup: function(aGroupDomID) {
		var checkedValue = js.JQuery("#" + aGroupDomID + ":checked").val();
		var shallListen = checkedValue == null ? false : true;
		var numberPattern = new EReg("\\d+","");
		numberPattern.match(aGroupDomID);
		var groupID = numberPattern.matched(0);
		var channel;
		var _this = this.channels;
		if(__map_reserved[groupID] != null ? _this.existsReserved(groupID) : _this.h.hasOwnProperty(groupID)) {
			var _this1 = this.channels;
			if(__map_reserved[groupID] != null) {
				channel = _this1.getReserved(groupID);
			} else {
				channel = _this1.h[groupID];
			}
		} else {
			channel = new com_trackware_Topic(groupID);
			var _this2 = this.channels;
			if(__map_reserved[groupID] != null) {
				_this2.setReserved(groupID,channel);
			} else {
				_this2.h[groupID] = channel;
			}
		}
		channel.listen(shallListen);
	}
	,iniTesting: function() {
		var user_id = 1;
		var organization_id = 1;
		var _g = 1;
		while(_g < 10) {
			var i = _g++;
			var virtual_user = this.get_lat();
			var virtual_user1 = new com_trackware_simulation_VirtualUser("users:" + (user_id == null ? "null" : "" + user_id),virtual_user,this.get_lng(),user_id++,organization_id,Std.random(400));
		}
	}
	,include: function(loc) {
		var bounds = this.map.getBounds();
		if(bounds == null) {
			bounds = new google.maps.LatLngBounds(loc);
			var options = { zoom : 15, center : { lat : loc.lat(), lng : loc.lng(), alt : 0}};
			this.map.setOptions(options);
		}
		if(!bounds.contains(loc)) {
			bounds.extend(loc);
			this.map.fitBounds(bounds);
			this.map.panToBounds(bounds);
		}
	}
	,addMarker: function(aLatLong,aCustomerName,aIcon,aHeight,aWidth,interactive) {
		var lat = aLatLong[0];
		var lng = aLatLong[1];
		new com_trackware_Marker(lat,lng,aCustomerName,aIcon,aHeight,aWidth,true);
	}
	,__class__: com_trackware_Map
	,__properties__: {get_lng:"get_lng",get_lat:"get_lat"}
};
var com_trackware_Marker = $hx_exports["com"]["trackware"]["Marker"] = function(aLat,aLong,aCoustomerName,aIcon,aHeight,aWidth,interactive,bus) {
	if(bus == null) {
		bus = false;
	}
	if(interactive == null) {
		interactive = true;
	}
	this.isOpened = false;
	var _gthis = this;
	if(com_trackware_Marker.markers == null) {
		com_trackware_Marker.markers = [];
	}
	this.iniInfoWindow(aCoustomerName);
	com_trackware_Marker.markers.push(this);
	var loc = new google.maps.LatLng(aLat,aLong,0);
	var image = { url : aIcon, scaledSize : new google.maps.Size(aHeight,aWidth)};
	this.map_marker = new google.maps.Marker({ position : loc, map : com_trackware_Map.get_instance().map, title : aCoustomerName, icon : image, label : aCoustomerName});
	this.showInfo(aCoustomerName);
	if(interactive) {
		this.map_marker.addListener("click",function() {
			if(_gthis.isOpened) {
				_gthis.hideInfo();
			} else {
				_gthis.showInfo(aCoustomerName);
			}
			if(_gthis.infowindow == null) {
				window.console.log(_gthis.infowindow);
				_gthis.showInfo(aCoustomerName);
			}
		});
	}
	com_trackware_Map.get_instance().include(loc);
	this.showInfo(aCoustomerName);
	if(bus) {
		this.hideInfo();
	}
};
$hxClasses["com.trackware.Marker"] = com_trackware_Marker;
com_trackware_Marker.__name__ = ["com","trackware","Marker"];
com_trackware_Marker.addDumbMarker = function(aLat,aLong,aTitle,aLabel,aIcon,aHeight,aWidth,bus) {
	if(bus == null) {
		bus = false;
	}
	var LatLng = { lat : aLat, lng : aLong};
	var marker;
	if(aIcon != "") {
		var image = { url : aIcon, scaledSize : new google.maps.Size(aHeight,aWidth)};
		marker = new google.maps.Marker({ position : LatLng, map : com_trackware_Map.get_instance().map, title : aTitle, icon : image, label : aLabel});
	} else {
		marker = new google.maps.Marker({ position : LatLng, map : com_trackware_Map.get_instance().map, title : aTitle, icon : aIcon});
	}
	return new com_trackware_Marker(aLat,aLong,aLabel,aIcon,70,70,true,bus);
};
com_trackware_Marker.clear = function() {
	if(com_trackware_Marker.markers != null) {
		var _g = 0;
		var _g1 = com_trackware_Marker.markers;
		while(_g < _g1.length) {
			var markerobj = _g1[_g];
			++_g;
			markerobj.dispose();
		}
	}
	com_trackware_Marker.markers = [];
};
com_trackware_Marker.prototype = {
	iniInfoWindow: function(aCoustomerName) {
		var _gthis = this;
		this.infowindow = new google.maps.InfoWindow({ content : "<div style='width:100px;'><center>" + aCoustomerName + "</center></div>", pixelOffset : new google.maps.Size(0,-2)});
		this.infowindow.addListener("closeclick",function() {
			_gthis.isOpened = false;
		});
	}
	,hideInfo: function() {
		this.infowindow.close();
		this.isOpened = false;
	}
	,showInfo: function(aCoustomerName) {
		this.infowindow.open(com_trackware_Map.get_instance().map,this.map_marker);
		this.isOpened = true;
	}
	,dispose: function() {
		this.map_marker.setMap(null);
		this.map_marker = null;
	}
	,__class__: com_trackware_Marker
};
var com_trackware_NodesManager = $hx_exports["com"]["trackware"]["NodesManager"] = function() {
	this.nodes_listening_to = [];
	this.nodes = new haxe_ds_IntMap();
	this.users_nodes = new haxe_ds_IntMap();
};
$hxClasses["com.trackware.NodesManager"] = com_trackware_NodesManager;
com_trackware_NodesManager.__name__ = ["com","trackware","NodesManager"];
com_trackware_NodesManager.__properties__ = {get_instance:"get_instance"}
com_trackware_NodesManager.get_instance = function() {
	if(com_trackware_NodesManager.instance == null) {
		com_trackware_NodesManager.instance = new com_trackware_NodesManager();
	}
	return com_trackware_NodesManager.instance;
};
com_trackware_NodesManager.prototype = {
	isShown: function(aNodeID) {
		return this.nodes_listening_to.indexOf(aNodeID) != -1;
	}
	,getNode: function(node_id) {
		var node;
		if(this.nodes.h.hasOwnProperty(node_id) == true) {
			node = this.nodes.h[node_id];
			return node;
		} else {
			return null;
		}
	}
	,setNode: function(aUserId,aNode,isVisible) {
		if(this.nodes.h.hasOwnProperty(aNode.id) != true) {
			var node = new com_trackware_map_Node(aNode.id);
			this.nodes.h[aNode.id] = node;
			if(this.users_nodes.h.hasOwnProperty(aUserId) == false) {
				var _this = this.users_nodes;
				var value = new haxe_ds_IntMap();
				_this.h[aUserId] = value;
			}
			var user_nodes = this.users_nodes.h[aUserId];
			if(user_nodes.h.hasOwnProperty(aNode.id) == false) {
				user_nodes.h[aNode.id] = node;
			}
		}
		if(isVisible) {
			this.showNode(aNode);
		} else {
			this.hideNode(aNode);
		}
	}
	,hideNode: function(aJSNode) {
		if(this.nodes_listening_to.indexOf(aJSNode.id) != -1) {
			var node = this.getNode(aJSNode.id);
			HxOverrides.remove(this.nodes_listening_to,aJSNode.id);
			node.clear();
		}
	}
	,showNode: function(aJSNode) {
		if(this.nodes_listening_to.indexOf(aJSNode.id) == -1) {
			this.nodes_listening_to.push(aJSNode.id);
			var node = this.getNode(aJSNode.id);
			node.setLocation(aJSNode.latlong[0],aJSNode.latlong[1]);
		}
	}
	,setNodes: function(aUserId,aNodes,color) {
		var _g = 0;
		while(_g < aNodes.length) {
			var node = aNodes[_g];
			++_g;
			this.setNode(aUserId,node,true);
			var node1 = this.getNode(node.id);
			node1.setColor(color);
		}
		var user_node = com_trackware_UsersManager.get_instance().getUser(aUserId);
		user_node.setColor(color);
	}
	,setTeams: function(aTeams) {
		var _g = 0;
		while(_g < aTeams.length) {
			var node = aTeams[_g];
			++_g;
		}
	}
	,__class__: com_trackware_NodesManager
};
var com_trackware_Topic = function(aTopic) {
	this.yd = 0.00003;
	this.xd = 0.00003;
	this["long"] = 35.9457;
	this.lat = 31.9566;
	this.isListening = false;
	var _gthis = this;
	this.topic = aTopic;
	this.group_users = new haxe_ds_IntMap();
	window.console.log("listens for ",aTopic);
	this.channel = new com_trackware_Channel(aTopic,com_trackware_Map.get_instance().socket);
	this.channel.channel.on("new_location",function(params) {
		_gthis.handleNewLocationMessage(params);
	});
	this.channel.channel.on("new_notificaiton",function(params1) {
		var tmp;
		var process_name;
		if(params1 == null) {
			process_name = null;
		} else {
			var process_name1;
			if(params1.__properties__) {
				tmp = params1.__properties__["get_" + "process_name"];
				process_name1 = tmp;
			} else {
				process_name1 = false;
			}
			if(process_name1) {
				process_name = params1[tmp]();
			} else {
				process_name = params1["process_name"];
			}
		}
		var process_name2 = process_name;
		window.console.log("new_notificaiton... PLEASE!!",process_name2);
		_gthis.channel.push("ive_got_the_notificaiton_via_channel",{ process_name : process_name2});
	});
};
$hxClasses["com.trackware.Topic"] = com_trackware_Topic;
com_trackware_Topic.__name__ = ["com","trackware","Topic"];
com_trackware_Topic.channelName = function(aGroupNumber) {
	if(typeof(aGroupNumber) == "number" && ((aGroupNumber | 0) === aGroupNumber)) {
		aGroupNumber = Std.string(aGroupNumber);
	}
	var channel_name = "g" + Std.string(aGroupNumber);
	return channel_name;
};
com_trackware_Topic.prototype = {
	setUsers: function(data) {
		var _g = 0;
		while(_g < data.length) {
			var userobj = data[_g];
			++_g;
			if(!com_trackware_UsersManager.get_instance().users.h.hasOwnProperty(userobj.id)) {
				var user = new com_trackware_map_User(userobj.id,userobj.name);
				com_trackware_UsersManager.get_instance().users.h[userobj.id] = user;
			}
		}
	}
	,listen: function(aListen) {
		if(aListen == null) {
			aListen = true;
		}
		if(this.isListening == aListen) {
			return;
		}
		this.isListening = aListen;
		if(aListen) {
			var join = this.channel.join();
			join.receive("ok",$bind(this,this.joined));
		} else {
			window.console.log("unsubscribe...");
			this.channel.leave();
			var user = this.group_users.iterator();
			while(user.hasNext()) {
				var user1 = user.next();
				user1.clear();
			}
			this.group_users = new haxe_ds_IntMap();
		}
	}
	,joined: function(response) {
		window.console.log("joined!: " + this.topic);
	}
	,handleNewLocationMessage: function(message) {
		com_trackware_Main.counts++;
		var user_id = message.user_id;
		var organization_id = message.organization_id;
		if(!com_trackware_UsersManager.get_instance().isShown(user_id)) {
			return;
		}
		var user = com_trackware_UsersManager.get_instance().getUser(user_id);
		var lat = message.lat;
		var $long = message["long"];
		if(!this.group_users.h.hasOwnProperty(user_id)) {
			this.group_users.h[user_id] = user;
		}
		if(com_trackware_UsersManager.get_instance().isShown(user_id)) {
			user.setLocation(lat,$long);
		}
	}
	,move: function() {
		var payLoad = { "user_id" : com_trackware_Main.user_id, "organization_id" : 1, "lat" : this.lat, "long" : this["long"], "at" : "1:30.........................am"};
		this.lat += this.xd;
		this["long"] += this.yd;
		this.channel.push("new_location",payLoad);
		haxe_Timer.delay($bind(this,this.move),500);
	}
	,__class__: com_trackware_Topic
};
var com_trackware_UsersManager = $hx_exports["com"]["trackware"]["UsersManager"] = function() {
	this.users_listening_to = [];
	this.users = new haxe_ds_IntMap();
};
$hxClasses["com.trackware.UsersManager"] = com_trackware_UsersManager;
com_trackware_UsersManager.__name__ = ["com","trackware","UsersManager"];
com_trackware_UsersManager.__properties__ = {get_instance:"get_instance"}
com_trackware_UsersManager.get_instance = function() {
	if(com_trackware_UsersManager.instance == null) {
		com_trackware_UsersManager.instance = new com_trackware_UsersManager();
	}
	return com_trackware_UsersManager.instance;
};
com_trackware_UsersManager.prototype = {
	isShown: function(aUserID) {
		return this.users_listening_to.indexOf(aUserID) != -1;
	}
	,getUser: function(user_id) {
		var user;
		if(this.users.h.hasOwnProperty(user_id) == true) {
			user = this.users.h[user_id];
			return user;
		} else {
			return null;
		}
	}
	,setUser: function(aUser,isVisible) {
		com_trackware_simulation_SimulationManager.get_instance().setUsers([aUser]);
		if(this.users.h.hasOwnProperty(aUser.id) != true) {
			var user = new com_trackware_map_User(aUser.id);
			this.users.h[aUser.id] = user;
		}
		if(isVisible) {
			this.showUser(aUser.id);
		} else {
			this.hideUser(aUser.id);
		}
	}
	,hideUser: function(aUserID) {
		if(this.users_listening_to.indexOf(aUserID) != -1) {
			var user = this.getUser(aUserID);
			HxOverrides.remove(this.users_listening_to,aUserID);
			user.clear();
		}
	}
	,showUser: function(aUserID) {
		if(this.users_listening_to.indexOf(aUserID) == -1) {
			this.users_listening_to.push(aUserID);
		}
	}
	,setUsers: function(aUsers) {
		com_trackware_simulation_SimulationManager.get_instance().setUsers(aUsers);
		var _g = 0;
		while(_g < aUsers.length) {
			var user = aUsers[_g];
			++_g;
			this.setUser(user,true);
		}
	}
	,setTeams: function(aTeams) {
		var _g = 0;
		while(_g < aTeams.length) {
			var user = aTeams[_g];
			++_g;
		}
	}
	,__class__: com_trackware_UsersManager
};
var com_trackware_map_MarkerAbstract = function(aId,aName,aSoloChannel,aAuthKey) {
	if(aAuthKey == null) {
		aAuthKey = "";
	}
	if(aSoloChannel == null) {
		aSoloChannel = "";
	}
	if(aName == null) {
		aName = "";
	}
	this.color = "#FFFFFF";
	this.isLoaded = false;
	var _gthis = this;
	this.isCleared = true;
	this.id = aId;
	this.name = aName;
	this.authKey = aAuthKey;
	this.map_marker = new google.maps.Marker({ icon : this.create_icon(), title : "AMEER", editable : true});
	this.map_marker.addListener("click",function() {
		_gthis.showInfo();
	});
	this.infowindow = new google.maps.InfoWindow({ content : "<div style='width:300px;' id='" + this.infoSelector() + "'></div>"});
};
$hxClasses["com.trackware.map.MarkerAbstract"] = com_trackware_map_MarkerAbstract;
com_trackware_map_MarkerAbstract.__name__ = ["com","trackware","map","MarkerAbstract"];
com_trackware_map_MarkerAbstract.prototype = {
	setColor: function(aColor) {
		this.color = aColor;
		this.map_marker.setIcon(this.create_icon(this.color));
	}
	,create_icon: function(aColor) {
		if(aColor == null) {
			aColor = "#00FF00";
		}
		return { path : "M 125,5 155,90 245,90 175,145 200,230 125,180 50,230 75,145 5,90 95,90 z", fillColor : aColor, fillOpacity : .9, scale : 1., strokeColor : "white", strokeWeight : .5};
	}
	,showNodes: function(aVisible) {
	}
	,setLocation: function(aLat,aLng) {
		if(this.isCleared) {
			this.isCleared = false;
			this.map_marker.setMap(com_trackware_Map.get_instance().map);
		}
		var loc = new google.maps.LatLng(aLat,aLng,0);
		this.map_marker.setPosition(loc);
		com_trackware_Map.get_instance().include(loc);
	}
	,clear: function() {
		this.map_marker.setMap(null);
		this.isCleared = true;
	}
	,showInfo: function() {
		var _gthis = this;
		this.infowindow.open(com_trackware_Map.get_instance().map,this.map_marker);
		if(!this.isLoaded) {
			js.JQuery("#" + this.infoSelector()).append(com_trackware_map_MarkerAbstract.spinner);
			var infoRequest = new XMLHttpRequest();
			infoRequest.open("POST","api/user-info");
			infoRequest.setRequestHeader("Authorization",com_trackware_Main.token);
			var formData = new FormData();
			formData.append("user_id",Std.string(this.id));
			infoRequest.send(formData);
			infoRequest.onload = function(aData) {
				_gthis.hideSpinner();
				if(infoRequest.status == 200) {
					var data = JSON.parse(infoRequest.response);
					com_trackware_Main.token = infoRequest.getResponseHeader("Authorization");
					var name = data.name;
					js.JQuery("#" + _gthis.infoSelector()).append(name);
				} else if(infoRequest.status == 400) {
					js_Browser.alert("Session expired, try to refresh your page");
				} else {
					js_Browser.alert("Error " + (infoRequest.status == null ? "null" : "" + infoRequest.status) + ", Try to refresh your page");
				}
				_gthis.isLoaded = true;
			};
		}
	}
	,infoSelector: function() {
		return "user-info-" + Std.string(this.id);
	}
	,hideSpinner: function() {
		js.JQuery("#" + this.infoSelector() + " .spinner").remove();
	}
	,__class__: com_trackware_map_MarkerAbstract
};
var com_trackware_map_Node = function(aNodeID,aName,aSoloChannel,aAuthKey) {
	if(aAuthKey == null) {
		aAuthKey = "";
	}
	if(aSoloChannel == null) {
		aSoloChannel = "";
	}
	if(aName == null) {
		aName = "";
	}
	com_trackware_map_MarkerAbstract.call(this,aNodeID,aName,aSoloChannel,aAuthKey);
	this.isShown = false;
};
$hxClasses["com.trackware.map.Node"] = com_trackware_map_Node;
com_trackware_map_Node.__name__ = ["com","trackware","map","Node"];
com_trackware_map_Node.__super__ = com_trackware_map_MarkerAbstract;
com_trackware_map_Node.prototype = $extend(com_trackware_map_MarkerAbstract.prototype,{
	get_isShown: function() {
		return com_trackware_NodesManager.get_instance().isShown(this.id);
	}
	,__class__: com_trackware_map_Node
	,__properties__: {get_isShown:"get_isShown"}
});
var com_trackware_map_User = function(aUserID,aName,aSoloChannel,aAuthKey) {
	if(aAuthKey == null) {
		aAuthKey = "";
	}
	if(aSoloChannel == null) {
		aSoloChannel = "";
	}
	if(aName == null) {
		aName = "";
	}
	com_trackware_map_MarkerAbstract.call(this,aUserID,aName,aSoloChannel,aAuthKey);
	this.solo_channel = aSoloChannel;
	this.isShown = false;
};
$hxClasses["com.trackware.map.User"] = com_trackware_map_User;
com_trackware_map_User.__name__ = ["com","trackware","map","User"];
com_trackware_map_User.__super__ = com_trackware_map_MarkerAbstract;
com_trackware_map_User.prototype = $extend(com_trackware_map_MarkerAbstract.prototype,{
	get_solo_channel: function() {
		return this.solo_channel;
	}
	,get_isShown: function() {
		return com_trackware_UsersManager.get_instance().isShown(this.id);
	}
	,create_icon: function(aColor) {
		if(aColor == null) {
			aColor = "#00FF00";
		}
		return { path : "M25 0c-8.284 0-15 6.656-15 14.866 0 8.211 15 35.135 15 35.135s15-26.924 15-35.135c0-8.21-6.716-14.866-15-14.866zm-.049 19.312c-2.557 0-4.629-2.055-4.629-4.588 0-2.535 2.072-4.589 4.629-4.589 2.559 0 4.631 2.054 4.631 4.589 0 2.533-2.072 4.588-4.631 4.588z", fillColor : aColor, fillOpacity : .9, scale : 1, strokeColor : "white", strokeWeight : .5};
	}
	,__class__: com_trackware_map_User
	,__properties__: {get_isShown:"get_isShown",get_solo_channel:"get_solo_channel"}
});
var com_trackware_simulation_SimulationManager = function() {
	window.console.log("virtual_users");
	this.virtual_users = new haxe_ds_IntMap();
};
$hxClasses["com.trackware.simulation.SimulationManager"] = com_trackware_simulation_SimulationManager;
com_trackware_simulation_SimulationManager.__name__ = ["com","trackware","simulation","SimulationManager"];
com_trackware_simulation_SimulationManager.__properties__ = {get_instance:"get_instance"}
com_trackware_simulation_SimulationManager.get_instance = function() {
	if(com_trackware_simulation_SimulationManager.instance == null) {
		com_trackware_simulation_SimulationManager.instance = new com_trackware_simulation_SimulationManager();
	}
	return com_trackware_simulation_SimulationManager.instance;
};
com_trackware_simulation_SimulationManager.prototype = {
	setUsers: function(avirtual_users) {
		var avirtual_users1 = js_Boot.__cast(avirtual_users , Array);
		var count = Object.keys(avirtual_users1).length;
		window.console.log("Simulation",avirtual_users1,count);
		var _g1 = 0;
		var _g = count;
		while(_g1 < _g) {
			var i = _g1++;
			var user = avirtual_users1[i];
			if(!this.virtual_users.h.hasOwnProperty(user.id)) {
				var publisher = new com_trackware_simulation_VirtualUser("users:" + (user.id == null ? "null" : "" + user.id),com_trackware_Map.get_instance().get_lat(),com_trackware_Map.get_instance().get_lng(),user.id,user.organization_id,Std.random(400));
				this.virtual_users.h[user.id] = publisher;
			}
		}
	}
	,__class__: com_trackware_simulation_SimulationManager
};
var com_trackware_simulation_Status = $hxClasses["com.trackware.simulation.Status"] = { __ename__ : ["com","trackware","simulation","Status"], __constructs__ : ["Idle","Recording","Playing"] };
com_trackware_simulation_Status.Idle = ["Idle",0];
com_trackware_simulation_Status.Idle.toString = $estr;
com_trackware_simulation_Status.Idle.__enum__ = com_trackware_simulation_Status;
com_trackware_simulation_Status.Recording = ["Recording",1];
com_trackware_simulation_Status.Recording.toString = $estr;
com_trackware_simulation_Status.Recording.__enum__ = com_trackware_simulation_Status;
com_trackware_simulation_Status.Playing = ["Playing",2];
com_trackware_simulation_Status.Playing.toString = $estr;
com_trackware_simulation_Status.Playing.__enum__ = com_trackware_simulation_Status;
com_trackware_simulation_Status.__empty_constructs__ = [com_trackware_simulation_Status.Idle,com_trackware_simulation_Status.Recording,com_trackware_simulation_Status.Playing];
var com_trackware_simulation_VirtualRound = $hx_exports["com"]["trackware"]["simulation"]["VirtualRound"] = function() {
	this.pointHouse = false;
	this.children = ["Mai","Ahmad","Saleem","Samir"];
	this.houses = [];
	this.points = [];
	this.currentPointIndex = 0;
};
$hxClasses["com.trackware.simulation.VirtualRound"] = com_trackware_simulation_VirtualRound;
com_trackware_simulation_VirtualRound.__name__ = ["com","trackware","simulation","VirtualRound"];
com_trackware_simulation_VirtualRound.__properties__ = {get_instance:"get_instance"}
com_trackware_simulation_VirtualRound.get_instance = function() {
	if(com_trackware_simulation_VirtualRound.instance == null) {
		com_trackware_simulation_VirtualRound.instance = new com_trackware_simulation_VirtualRound();
	}
	return com_trackware_simulation_VirtualRound.instance;
};
com_trackware_simulation_VirtualRound.prototype = {
	mapClicked: function(lat,lng,isHome) {
		this.points.push({ lat : lat, lng : lng, isHome : isHome});
	}
	,startRecording: function() {
		this.status = com_trackware_simulation_Status.Recording;
		this.points = [];
	}
	,stopRecording: function() {
		this.status = com_trackware_simulation_Status.Idle;
		var serializer = new haxe_Serializer();
		serializer.serialize(this.points);
		var SerializedPoint = serializer.toString();
		window.console.log(SerializedPoint);
	}
	,showKidsPoints: function() {
		var unserializer = new haxe_Unserializer("aoy3:latd31.988968656643515y3:lngd35.83740234375y6:isHomefgoR0d31.987075907117916R1d35.83688735961914R2fgoR0d31.985183118540245R1d35.837016105651855R2fgoR0d31.9832902909118R1d35.8379602432251R2tgoR0d31.98150662914206R1d35.839033126831055R2fgoR0d31.978994883371264R1d35.84040641784668R2fgoR0d31.97702912133328R1d35.84023475646973R2tgoR0d31.974917700391906R1d35.840749740600586R2fgoR0d31.975208933754473R1d35.841994285583496R2fgoR0d31.9753909541368R1d35.84311008453369R2tgoR0d31.97560937811911R1d35.84409713745117R2fgoR0d31.97480848764267R1d35.84439754486084R2fgoR0d31.975791397707265R1d35.85092067718506R2fgoR0d31.976155435800628R1d35.85169315338135R2fgoR0d31.975281741950724R1d35.85195064544678R2tgoR0d31.975318146027185R1d35.85259437561035R2fgoR0d31.976009820736554R1d35.85237979888916R2fgoR0d31.97641026160683R1d35.85559844970703R2fgh");
		this.points = unserializer.unserialize();
		var childNumber = 1;
		var _g1 = 0;
		var _g = this.points.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.points[i].isHome) {
				this.marker = com_trackware_Marker.addDumbMarker(this.points[i].lat,this.points[i].lng,"",this.children[childNumber - 1],"D/content/images/" + childNumber++ + "child.png",70,70).map_marker;
				this.marker.setMap(com_trackware_Map.get_instance().map);
			}
		}
	}
	,playRecording: function() {
		this.status = com_trackware_simulation_Status.Playing;
		if(com_trackware_Map.get_instance().map == null) {
			com_trackware_Map.get_instance().ini();
		}
		this.placeKids();
		if(this.marker == null) {
			this.marker = com_trackware_Marker.addDumbMarker(0,0,"","","D/content/images/img_bus_track.png",80,80,true).map_marker;
			this.marker.setMap(com_trackware_Map.get_instance().map);
		}
		var unserializer = new haxe_Unserializer("aoy3:latd31.988968656643515y3:lngd35.83740234375y6:isHomefgoR0d31.987075907117916R1d35.83688735961914R2fgoR0d31.985183118540245R1d35.837016105651855R2fgoR0d31.9830491345873R1d35.8380433917045R2tgoR0d31.98150662914206R1d35.839033126831055R2fgoR0d31.978994883371264R1d35.84040641784668R2fgoR0d31.97702912133328R1d35.84023475646973R2tgoR0d31.974917700391906R1d35.840749740600586R2fgoR0d31.975208933754473R1d35.841994285583496R2fgoR0d31.9753909541368R1d35.84311008453369R2tgoR0d31.97560937811911R1d35.84409713745117R2fgoR0d31.97480848764267R1d35.84439754486084R2fgoR0d31.975791397707265R1d35.85092067718506R2fgoR0d31.976155435800628R1d35.85169315338135R2fgoR0d31.975281741950724R1d35.85195064544678R2tgoR0d31.975318146027185R1d35.85259437561035R2fgoR0d31.976009820736554R1d35.85237979888916R2fgoR0d31.97641026160683R1d35.85559844970703R2fgh");
		this.points = unserializer.unserialize();
		this.currentPointIndex = 0;
		this.lat = this.points[0].lat;
		this.lng = this.points[0].lng;
		var loc = new google.maps.LatLng(this.points[0].lat,this.points[0].lng,0);
		com_trackware_Map.get_instance().map.setCenter(loc);
		com_trackware_Map.get_instance().map.setZoom(13);
		this.marker.setPosition(loc);
		this.tweenToNextPoint();
	}
	,placeKids: function() {
		var unserializer = new haxe_Unserializer("aoy3:latd31.982944481645575y3:lngd35.837810039520264y6:isHomefgoR0d31.97695631452324R1d35.84008455276489R2fgoR0d31.975263539907086R1d35.84313154220581R2fgoR0d31.97533748568694R1d35.85196405649185R2fgh");
		this.houses = unserializer.unserialize();
		var childNumber = 1;
		var _g1 = 0;
		var _g = this.houses.length;
		while(_g1 < _g) {
			var i = _g1++;
			var houseMarker = com_trackware_Marker.addDumbMarker(0,0,"",this.children[childNumber - 1],"D/content/images/" + childNumber++ + "child.png",70,70).map_marker;
			var loc = new google.maps.LatLng(this.houses[i].lat,this.houses[i].lng,0);
			houseMarker.setMap(com_trackware_Map.get_instance().map);
			houseMarker.setPosition(loc);
		}
	}
	,tweenToNextPoint: function() {
		var currentPoint = this.points[this.currentPointIndex];
		if(this.currentPointIndex == this.points.length - 1) {
			return;
		}
		var delay = 4;
		if(this.currentPointIndex == 10 || this.currentPointIndex == 6 || this.currentPointIndex == 4 || this.currentPointIndex == 2) {
			delay = 6;
		}
		if(this.currentPointIndex == 11 || this.currentPointIndex == 6 || this.currentPointIndex == 4 || this.currentPointIndex == 2) {
			delay = 7;
		}
		var nextPoint = this.points[this.currentPointIndex + 1];
		if(nextPoint.isHome) {
			motion_Actuate.tween(this,delay,{ lat : nextPoint.lat, lng : nextPoint.lng}).ease(motion_easing_Quad.get_easeOut()).onUpdate($bind(this,this.moveMarker)).onComplete($bind(this,this.tweenToNextPoint));
		} else if(currentPoint.isHome) {
			motion_Actuate.tween(this,delay,{ lat : nextPoint.lat, lng : nextPoint.lng}).ease(motion_easing_Quad.get_easeIn()).delay(2).onUpdate($bind(this,this.moveMarker)).onComplete($bind(this,this.tweenToNextPoint));
		} else {
			motion_Actuate.tween(this,delay,{ lat : nextPoint.lat, lng : nextPoint.lng}).ease(motion_easing_Linear.get_easeNone()).onUpdate($bind(this,this.moveMarker)).onComplete($bind(this,this.tweenToNextPoint));
		}
		this.currentPointIndex++;
	}
	,moveMarker: function() {
		var loc = new google.maps.LatLng(this.lat,this.lng,0);
		this.marker.setPosition(loc);
	}
	,__class__: com_trackware_simulation_VirtualRound
};
var com_trackware_simulation_VirtualUser = function(aTopicName,aLat,aLong,aUserID,aOrganizationID,aRad) {
	this.lat = aLat;
	this["long"] = aLong;
	this.user_id = aUserID;
	this.organization_id = aOrganizationID;
	this.topicName = aTopicName;
	var step = 0.001;
	var a = Math.random() * 360;
	this.xd = Math.cos(a * Math.PI / 180) * step;
	this.yd = Math.sin(a * Math.PI / 180) * step;
	this.lat += this.yd * aRad;
	this["long"] += this.xd * aRad;
	this.init_lat = this.lat;
	var token = com_trackware_Main.token.indexOf("Bearer ") == -1 ? com_trackware_Main.token : HxOverrides.substr(com_trackware_Main.token,7,null);
	this.socket = com_trackware_Main.socketCreator.createSocket({ token : token, fake_user_id : aUserID},com_trackware_Main.phoenix_app_url);
	window.console.log("socket",this.socket);
	this.socket.connect();
	this.channel = new com_trackware_Channel(aTopicName,this.socket);
	this.channel.join({ "users" : aUserID});
	this.move();
};
$hxClasses["com.trackware.simulation.VirtualUser"] = com_trackware_simulation_VirtualUser;
com_trackware_simulation_VirtualUser.__name__ = ["com","trackware","simulation","VirtualUser"];
com_trackware_simulation_VirtualUser.prototype = {
	move: function() {
		var payLoad = { "user_id" : this.user_id, "organization_id" : 1, "lat" : this.lat, "long" : this["long"], "at" : "1:30am", "seconds_to_live" : 1000000};
		this.yd = Math.sin(this["long"] * 10 * Math.PI / 180);
		this.lat = this.init_lat + this.yd;
		this["long"] += this.xd;
		this.channel.push("new_location",payLoad);
		haxe_Timer.delay($bind(this,this.move),5000);
	}
	,__class__: com_trackware_simulation_VirtualUser
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = ["haxe","Serializer"];
haxe_Serializer.prototype = {
	toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var _this = this.shash;
		var x = __map_reserved[s] != null ? _this.getReserved(s) : _this.h[s];
		if(x != null) {
			this.buf.b += "R";
			this.buf.b += x == null ? "null" : "" + x;
			return;
		}
		var _this1 = this.shash;
		var value = this.scount++;
		if(__map_reserved[s] != null) {
			_this1.setReserved(s,value);
		} else {
			_this1.h[s] = value;
		}
		this.buf.b += "y";
		s = encodeURIComponent(s);
		this.buf.b += Std.string(s.length);
		this.buf.b += ":";
		this.buf.b += s == null ? "null" : "" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				this.buf.b += i == null ? "null" : "" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		var _g = Type["typeof"](v);
		switch(_g[1]) {
		case 0:
			this.buf.b += "n";
			break;
		case 1:
			var v1 = v;
			if(v1 == 0) {
				this.buf.b += "z";
				return;
			}
			this.buf.b += "i";
			this.buf.b += v1 == null ? "null" : "" + v1;
			break;
		case 2:
			var v2 = v;
			if(isNaN(v2)) {
				this.buf.b += "k";
			} else if(!isFinite(v2)) {
				this.buf.b += v2 < 0 ? "m" : "p";
			} else {
				this.buf.b += "d";
				this.buf.b += v2 == null ? "null" : "" + v2;
			}
			break;
		case 3:
			this.buf.b += v ? "t" : "f";
			break;
		case 4:
			if(js_Boot.__instanceof(v,Class)) {
				var className = Type.getClassName(v);
				this.buf.b += "A";
				this.serializeString(className);
			} else if(js_Boot.__instanceof(v,Enum)) {
				this.buf.b += "B";
				this.serializeString(Type.getEnumName(v));
			} else {
				if(this.useCache && this.serializeRef(v)) {
					return;
				}
				this.buf.b += "o";
				this.serializeFields(v);
			}
			break;
		case 5:
			throw new js__$Boot_HaxeError("Cannot serialize function");
			break;
		case 6:
			var c = _g[2];
			if(c == String) {
				this.serializeString(v);
				return;
			}
			if(this.useCache && this.serializeRef(v)) {
				return;
			}
			switch(c) {
			case Array:
				var ucount = 0;
				this.buf.b += "a";
				var l = v["length"];
				var _g1 = 0;
				var _g2 = l;
				while(_g1 < _g2) {
					var i = _g1++;
					if(v[i] == null) {
						++ucount;
					} else {
						if(ucount > 0) {
							if(ucount == 1) {
								this.buf.b += "n";
							} else {
								this.buf.b += "u";
								this.buf.b += ucount == null ? "null" : "" + ucount;
							}
							ucount = 0;
						}
						this.serialize(v[i]);
					}
				}
				if(ucount > 0) {
					if(ucount == 1) {
						this.buf.b += "n";
					} else {
						this.buf.b += "u";
						this.buf.b += ucount == null ? "null" : "" + ucount;
					}
				}
				this.buf.b += "h";
				break;
			case Date:
				var d = v;
				this.buf.b += "v";
				this.buf.b += Std.string(d.getTime());
				break;
			case List:
				this.buf.b += "l";
				var v3 = v;
				var _g_head = v3.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					var i1 = val;
					this.serialize(i1);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_IntMap:
				this.buf.b += "q";
				var v4 = v;
				var k = v4.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					this.buf.b += ":";
					this.buf.b += k1 == null ? "null" : "" + k1;
					this.serialize(v4.h[k1]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_ObjectMap:
				this.buf.b += "M";
				var v5 = v;
				var k2 = v5.keys();
				while(k2.hasNext()) {
					var k3 = k2.next();
					var id = Reflect.field(k3,"__id__");
					Reflect.deleteField(k3,"__id__");
					this.serialize(k3);
					k3["__id__"] = id;
					this.serialize(v5.h[k3.__id__]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_StringMap:
				this.buf.b += "b";
				var v6 = v;
				var k4 = v6.keys();
				while(k4.hasNext()) {
					var k5 = k4.next();
					this.serializeString(k5);
					this.serialize(__map_reserved[k5] != null ? v6.getReserved(k5) : v6.h[k5]);
				}
				this.buf.b += "h";
				break;
			case haxe_io_Bytes:
				var v7 = v;
				this.buf.b += "s";
				this.buf.b += Std.string(Math.ceil(v7.length * 8 / 6));
				this.buf.b += ":";
				var i2 = 0;
				var max = v7.length - 2;
				var b64 = haxe_Serializer.BASE64_CODES;
				if(b64 == null) {
					var length = haxe_Serializer.BASE64.length;
					var this1 = new Array(length);
					b64 = this1;
					var _g11 = 0;
					var _g3 = haxe_Serializer.BASE64.length;
					while(_g11 < _g3) {
						var i3 = _g11++;
						b64[i3] = HxOverrides.cca(haxe_Serializer.BASE64,i3);
					}
					haxe_Serializer.BASE64_CODES = b64;
				}
				while(i2 < max) {
					var b1 = v7.b[i2++];
					var b2 = v7.b[i2++];
					var b3 = v7.b[i2++];
					this.buf.b += String.fromCharCode(b64[b1 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[(b2 << 2 | b3 >> 6) & 63]);
					this.buf.b += String.fromCharCode(b64[b3 & 63]);
				}
				if(i2 == max) {
					var b11 = v7.b[i2++];
					var b21 = v7.b[i2++];
					this.buf.b += String.fromCharCode(b64[b11 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b11 << 4 | b21 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[b21 << 2 & 63]);
				} else if(i2 == max + 1) {
					var b12 = v7.b[i2++];
					this.buf.b += String.fromCharCode(b64[b12 >> 2]);
					this.buf.b += String.fromCharCode(b64[b12 << 4 & 63]);
				}
				break;
			default:
				if(this.useCache) {
					this.cache.pop();
				}
				if(v.hxSerialize != null) {
					this.buf.b += "C";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					v.hxSerialize(this);
					this.buf.b += "g";
				} else {
					this.buf.b += "c";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					this.serializeFields(v);
				}
			}
			break;
		case 7:
			var e = _g[2];
			if(this.useCache) {
				if(this.serializeRef(v)) {
					return;
				}
				this.cache.pop();
			}
			this.buf.b += Std.string(this.useEnumIndex ? "j" : "w");
			this.serializeString(Type.getEnumName(e));
			if(this.useEnumIndex) {
				this.buf.b += ":";
				this.buf.b += Std.string(v[1]);
			} else {
				this.serializeString(v[0]);
			}
			this.buf.b += ":";
			var l1 = v["length"];
			this.buf.b += Std.string(l1 - 2);
			var _g12 = 2;
			var _g4 = l1;
			while(_g12 < _g4) {
				var i4 = _g12++;
				this.serialize(v[i4]);
			}
			if(this.useCache) {
				this.cache.push(v);
			}
			break;
		default:
			throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
		}
	}
	,__class__: haxe_Serializer
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = ["haxe","_Unserializer","DefaultResolver"];
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return Type.resolveClass(name);
	}
	,resolveEnum: function(name) {
		return Type.resolveEnum(name);
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe","Unserializer"];
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.prototype = {
	readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw new js__$Boot_HaxeError("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw new js__$Boot_HaxeError("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw new js__$Boot_HaxeError("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		var _g = this.buf.charCodeAt(this.pos++);
		switch(_g) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw new js__$Boot_HaxeError("Class not found " + name);
			}
			return cl;
		case 66:
			var name1 = this.unserialize();
			var e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name1);
			}
			return e;
		case 67:
			var name2 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name2);
			}
			var o = Type.createEmptyInstance(cl1);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw new js__$Boot_HaxeError("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw new js__$Boot_HaxeError("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf1 = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n1 = this.readDigits();
					a[a.length + n1 - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s1] != null) {
					h1.setReserved(s1,value);
				} else {
					h1.h[s1] = value;
				}
			}
			this.pos++;
			return h1;
		case 99:
			var name3 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name3);
			}
			var o1 = Type.createEmptyInstance(cl2);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name4 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name4);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
			}
			var e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf3 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			var h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			var c1 = this.buf.charCodeAt(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h2.h[i] = value1;
				c1 = this.buf.charCodeAt(this.pos++);
			}
			if(c1 != 104) {
				throw new js__$Boot_HaxeError("Invalid IntMap format");
			}
			return h2;
		case 114:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.cache.length) {
				throw new js__$Boot_HaxeError("Invalid reference");
			}
			return this.cache[n2];
		case 115:
			var len = this.readDigits();
			var buf5 = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw new js__$Boot_HaxeError("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i1 + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[buf5.charCodeAt(i1++)];
				var c2 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c11 << 2 | c2 >> 4) & 255;
				var c3 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
				var c4 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c3 << 6 | c4) & 255;
			}
			if(rest >= 2) {
				var c12 = codes[buf5.charCodeAt(i1++)];
				var c21 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c12 << 2 | c21 >> 4) & 255;
				if(rest == 3) {
					var c31 = codes[buf5.charCodeAt(i1++)];
					bytes.b[bpos++] = (c21 << 4 | c31 >> 2) & 255;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				var t = this.readFloat();
				d = new Date(t);
			}
			this.cache.push(d);
			return d;
		case 119:
			var name5 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name5);
			}
			var e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
			break;
		case 121:
			var len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw new js__$Boot_HaxeError("Invalid string length");
			}
			var s2 = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s2 = decodeURIComponent(s2.split("+").join(" "));
			this.scache.push(s2);
			return s2;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.assignId = function(obj) {
	return obj.__id__ = ++haxe_ds_ObjectMap.count;
};
haxe_ds_ObjectMap.getId = function(obj) {
	return obj.__id__;
};
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.alloc = function(length) {
	return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.fastGet = function(b,pos) {
	return b.bytes[pos];
};
haxe_io_Bytes.prototype = {
	__class__: haxe_io_Bytes
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = ["js","Browser"];
js_Browser.alert = function(v) {
	window.alert(js_Boot.__string_rec(v,""));
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var motion_actuators_IGenericActuator = function() { };
$hxClasses["motion.actuators.IGenericActuator"] = motion_actuators_IGenericActuator;
motion_actuators_IGenericActuator.__name__ = ["motion","actuators","IGenericActuator"];
motion_actuators_IGenericActuator.prototype = {
	__class__: motion_actuators_IGenericActuator
};
var motion_actuators_GenericActuator = function(target,duration,properties) {
	this._autoVisible = true;
	this._delay = 0;
	this._reflect = false;
	this._repeat = 0;
	this._reverse = false;
	this._smartRotation = false;
	this._snapping = false;
	this.special = false;
	this.target = target;
	this.properties = properties;
	this.duration = duration;
	this._ease = motion_Actuate.defaultEase;
};
$hxClasses["motion.actuators.GenericActuator"] = motion_actuators_GenericActuator;
motion_actuators_GenericActuator.__name__ = ["motion","actuators","GenericActuator"];
motion_actuators_GenericActuator.__interfaces__ = [motion_actuators_IGenericActuator];
motion_actuators_GenericActuator.prototype = {
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(this.target,i)) {
				this.target[i] = Reflect.field(this.properties,i);
			} else {
				var o = this.target;
				var value = Reflect.field(this.properties,i);
				var tmp;
				var tmp1;
				if(o.__properties__) {
					tmp = o.__properties__["set_" + i];
					tmp1 = tmp;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					o[tmp](value);
				} else {
					o[i] = value;
				}
			}
		}
	}
	,autoVisible: function(value) {
		if(value == null) {
			value = true;
		}
		this._autoVisible = value;
		return this;
	}
	,callMethod: function(method,params) {
		if(params == null) {
			params = [];
		}
		return method.apply(method,params);
	}
	,change: function() {
		if(this._onUpdate != null) {
			var method = this._onUpdate;
			var params = this._onUpdateParams;
			if(params == null) {
				params = [];
			}
			method.apply(method,params);
		}
	}
	,complete: function(sendEvent) {
		if(sendEvent == null) {
			sendEvent = true;
		}
		if(sendEvent) {
			this.change();
			if(this._onComplete != null) {
				var method = this._onComplete;
				var params = this._onCompleteParams;
				if(params == null) {
					params = [];
				}
				method.apply(method,params);
			}
		}
		motion_Actuate.unload(this);
	}
	,delay: function(duration) {
		this._delay = duration;
		return this;
	}
	,ease: function(easing) {
		this._ease = easing;
		return this;
	}
	,move: function() {
	}
	,onComplete: function(handler,parameters) {
		this._onComplete = handler;
		if(parameters == null) {
			this._onCompleteParams = [];
		} else {
			this._onCompleteParams = parameters;
		}
		if(this.duration == 0) {
			this.complete();
		}
		return this;
	}
	,onRepeat: function(handler,parameters) {
		this._onRepeat = handler;
		if(parameters == null) {
			this._onRepeatParams = [];
		} else {
			this._onRepeatParams = parameters;
		}
		return this;
	}
	,onUpdate: function(handler,parameters) {
		this._onUpdate = handler;
		if(parameters == null) {
			this._onUpdateParams = [];
		} else {
			this._onUpdateParams = parameters;
		}
		return this;
	}
	,onPause: function(handler,parameters) {
		this._onPause = handler;
		if(parameters == null) {
			this._onPauseParams = [];
		} else {
			this._onPauseParams = parameters;
		}
		return this;
	}
	,onResume: function(handler,parameters) {
		this._onResume = handler;
		if(parameters == null) {
			this._onResumeParams = [];
		} else {
			this._onResumeParams = parameters;
		}
		return this;
	}
	,pause: function() {
		if(this._onPause != null) {
			var method = this._onPause;
			var params = this._onPauseParams;
			if(params == null) {
				params = [];
			}
			method.apply(method,params);
		}
	}
	,reflect: function(value) {
		if(value == null) {
			value = true;
		}
		this._reflect = value;
		this.special = true;
		return this;
	}
	,repeat: function(times) {
		if(times == null) {
			times = -1;
		}
		this._repeat = times;
		return this;
	}
	,resume: function() {
		if(this._onResume != null) {
			var method = this._onResume;
			var params = this._onResumeParams;
			if(params == null) {
				params = [];
			}
			method.apply(method,params);
		}
	}
	,reverse: function(value) {
		if(value == null) {
			value = true;
		}
		this._reverse = value;
		this.special = true;
		return this;
	}
	,smartRotation: function(value) {
		if(value == null) {
			value = true;
		}
		this._smartRotation = value;
		this.special = true;
		return this;
	}
	,snapping: function(value) {
		if(value == null) {
			value = true;
		}
		this._snapping = value;
		this.special = true;
		return this;
	}
	,stop: function(properties,complete,sendEvent) {
	}
	,__class__: motion_actuators_GenericActuator
};
var motion_actuators_SimpleActuator = function(target,duration,properties) {
	this.active = true;
	this.propertyDetails = [];
	this.sendChange = false;
	this.paused = false;
	this.cacheVisible = false;
	this.initialized = false;
	this.setVisible = false;
	this.toggleVisible = false;
	this.startTime = new Date().getTime() / 1000;
	motion_actuators_GenericActuator.call(this,target,duration,properties);
	if(!motion_actuators_SimpleActuator.addedEvent) {
		motion_actuators_SimpleActuator.addedEvent = true;
		motion_actuators_SimpleActuator.timer = new haxe_Timer(33);
		motion_actuators_SimpleActuator.timer.run = motion_actuators_SimpleActuator.stage_onEnterFrame;
	}
};
$hxClasses["motion.actuators.SimpleActuator"] = motion_actuators_SimpleActuator;
motion_actuators_SimpleActuator.__name__ = ["motion","actuators","SimpleActuator"];
motion_actuators_SimpleActuator.stage_onEnterFrame = function() {
	var currentTime = new Date().getTime() / 1000;
	var actuator;
	var j = 0;
	var cleanup = false;
	var _g1 = 0;
	var _g = motion_actuators_SimpleActuator.actuatorsLength;
	while(_g1 < _g) {
		var i = _g1++;
		actuator = motion_actuators_SimpleActuator.actuators[j];
		if(actuator != null && actuator.active) {
			if(currentTime >= actuator.timeOffset) {
				actuator.update(currentTime);
			}
			++j;
		} else {
			motion_actuators_SimpleActuator.actuators.splice(j,1);
			--motion_actuators_SimpleActuator.actuatorsLength;
		}
	}
};
motion_actuators_SimpleActuator.__super__ = motion_actuators_GenericActuator;
motion_actuators_SimpleActuator.prototype = $extend(motion_actuators_GenericActuator.prototype,{
	setField_motion_actuators_MotionPathActuator_T: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) {
			target[propertyName] = value;
		} else {
			var tmp;
			var tmp1;
			if(target.__properties__) {
				tmp = target.__properties__["set_" + propertyName];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				target[tmp](value);
			} else {
				target[propertyName] = value;
			}
		}
	}
	,setField_motion_actuators_SimpleActuator_T: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) {
			target[propertyName] = value;
		} else {
			var tmp;
			var tmp1;
			if(target.__properties__) {
				tmp = target.__properties__["set_" + propertyName];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				target[tmp](value);
			} else {
				target[propertyName] = value;
			}
		}
	}
	,autoVisible: function(value) {
		if(value == null) {
			value = true;
		}
		this._autoVisible = value;
		if(!value) {
			this.toggleVisible = false;
			if(this.setVisible) {
				var target = this.target;
				var value1 = this.cacheVisible;
				if(Object.prototype.hasOwnProperty.call(target,"visible")) {
					target["visible"] = value1;
				} else {
					var tmp;
					var tmp1;
					if(target.__properties__) {
						tmp = target.__properties__["set_" + "visible"];
						tmp1 = tmp;
					} else {
						tmp1 = false;
					}
					if(tmp1) {
						target[tmp](value1);
					} else {
						target["visible"] = value1;
					}
				}
			}
		}
		return this;
	}
	,delay: function(duration) {
		this._delay = duration;
		this.timeOffset = this.startTime + duration;
		return this;
	}
	,getField: function(target,propertyName) {
		var value = null;
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) {
			value = Reflect.field(target,propertyName);
		} else {
			var tmp;
			var value1;
			if(target == null) {
				value1 = null;
			} else {
				var value2;
				if(target.__properties__) {
					tmp = target.__properties__["get_" + propertyName];
					value2 = tmp;
				} else {
					value2 = false;
				}
				if(value2) {
					value1 = target[tmp]();
				} else {
					value1 = target[propertyName];
				}
			}
			value = value1;
		}
		return value;
	}
	,initialize: function() {
		var details;
		var start;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var isField = true;
			if(Object.prototype.hasOwnProperty.call(this.target,i)) {
				start = Reflect.field(this.target,i);
			} else {
				isField = false;
				var o = this.target;
				var tmp;
				if(o == null) {
					start = null;
				} else {
					var start1;
					if(o.__properties__) {
						tmp = o.__properties__["get_" + i];
						start1 = tmp;
					} else {
						start1 = false;
					}
					if(start1) {
						start = o[tmp]();
					} else {
						start = o[i];
					}
				}
			}
			if(typeof(start) == "number") {
				var target = this.properties;
				var value = null;
				if(Object.prototype.hasOwnProperty.call(target,i)) {
					value = Reflect.field(target,i);
				} else {
					var tmp1;
					var value1;
					if(target == null) {
						value1 = null;
					} else {
						var value2;
						if(target.__properties__) {
							tmp1 = target.__properties__["get_" + i];
							value2 = tmp1;
						} else {
							value2 = false;
						}
						if(value2) {
							value1 = target[tmp1]();
						} else {
							value1 = target[i];
						}
					}
					value = value1;
				}
				var value3 = value;
				if(start == null) {
					start = 0;
				}
				if(value3 == null) {
					value3 = 0;
				}
				details = new motion_actuators_PropertyDetails(this.target,i,start,value3 - start,isField);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,move: function() {
		this.toggleVisible = Object.prototype.hasOwnProperty.call(this.properties,"alpha") && Object.prototype.hasOwnProperty.call(this.properties,"visible");
		var tmp;
		if(this.toggleVisible && this.properties.alpha != 0) {
			var target = this.target;
			var value = null;
			if(Object.prototype.hasOwnProperty.call(target,"visible")) {
				value = Reflect.field(target,"visible");
			} else {
				var tmp1;
				var value1;
				if(target == null) {
					value1 = null;
				} else {
					var value2;
					if(target.__properties__) {
						tmp1 = target.__properties__["get_" + "visible"];
						value2 = tmp1;
					} else {
						value2 = false;
					}
					if(value2) {
						value1 = target[tmp1]();
					} else {
						value1 = target["visible"];
					}
				}
				value = value1;
			}
			tmp = !value;
		} else {
			tmp = false;
		}
		if(tmp) {
			this.setVisible = true;
			var target1 = this.target;
			var value3 = null;
			if(Object.prototype.hasOwnProperty.call(target1,"visible")) {
				value3 = Reflect.field(target1,"visible");
			} else {
				var tmp2;
				var value4;
				if(target1 == null) {
					value4 = null;
				} else {
					var value5;
					if(target1.__properties__) {
						tmp2 = target1.__properties__["get_" + "visible"];
						value5 = tmp2;
					} else {
						value5 = false;
					}
					if(value5) {
						value4 = target1[tmp2]();
					} else {
						value4 = target1["visible"];
					}
				}
				value3 = value4;
			}
			this.cacheVisible = value3;
			var target2 = this.target;
			if(Object.prototype.hasOwnProperty.call(target2,"visible")) {
				target2["visible"] = true;
			} else {
				var tmp3;
				var tmp4;
				if(target2.__properties__) {
					tmp3 = target2.__properties__["set_" + "visible"];
					tmp4 = tmp3;
				} else {
					tmp4 = false;
				}
				if(tmp4) {
					target2[tmp3](true);
				} else {
					target2["visible"] = true;
				}
			}
		}
		this.timeOffset = this.startTime;
		motion_actuators_SimpleActuator.actuators.push(this);
		++motion_actuators_SimpleActuator.actuatorsLength;
	}
	,onUpdate: function(handler,parameters) {
		this._onUpdate = handler;
		if(parameters == null) {
			this._onUpdateParams = [];
		} else {
			this._onUpdateParams = parameters;
		}
		this.sendChange = true;
		return this;
	}
	,pause: function() {
		if(!this.paused) {
			this.paused = true;
			motion_actuators_GenericActuator.prototype.pause.call(this);
			this.pauseTime = new Date().getTime() / 1000;
		}
	}
	,resume: function() {
		if(this.paused) {
			this.paused = false;
			this.timeOffset += new Date().getTime() / 1000 - this.pauseTime;
			motion_actuators_GenericActuator.prototype.resume.call(this);
		}
	}
	,setProperty: function(details,value) {
		if(details.isField) {
			details.target[details.propertyName] = value;
		} else {
			var o = details.target;
			var field = details.propertyName;
			var tmp;
			var tmp1;
			if(o.__properties__) {
				tmp = o.__properties__["set_" + field];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				o[tmp](value);
			} else {
				o[field] = value;
			}
		}
	}
	,stop: function(properties,complete,sendEvent) {
		if(this.active) {
			if(properties == null) {
				this.active = false;
				if(complete) {
					this.apply();
				}
				this.complete(sendEvent);
				return;
			}
			var _g = 0;
			var _g1 = Reflect.fields(properties);
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(Object.prototype.hasOwnProperty.call(this.properties,i)) {
					this.active = false;
					if(complete) {
						this.apply();
					}
					this.complete(sendEvent);
					return;
				}
			}
		}
	}
	,update: function(currentTime) {
		if(!this.paused) {
			var details;
			var easing;
			var i;
			var tweenPosition = (currentTime - this.timeOffset) / this.duration;
			if(tweenPosition > 1) {
				tweenPosition = 1;
			}
			if(!this.initialized) {
				this.initialize();
			}
			if(!this.special) {
				easing = this._ease.calculate(tweenPosition);
				var _g1 = 0;
				var _g = this.detailsLength;
				while(_g1 < _g) {
					var i1 = _g1++;
					details = this.propertyDetails[i1];
					var value = details.start + details.change * easing;
					if(details.isField) {
						details.target[details.propertyName] = value;
					} else {
						var o = details.target;
						var field = details.propertyName;
						var tmp;
						var tmp1;
						if(o.__properties__) {
							tmp = o.__properties__["set_" + field];
							tmp1 = tmp;
						} else {
							tmp1 = false;
						}
						if(tmp1) {
							o[tmp](value);
						} else {
							o[field] = value;
						}
					}
				}
			} else {
				if(!this._reverse) {
					easing = this._ease.calculate(tweenPosition);
				} else {
					easing = this._ease.calculate(1 - tweenPosition);
				}
				var endValue;
				var _g11 = 0;
				var _g2 = this.detailsLength;
				while(_g11 < _g2) {
					var i2 = _g11++;
					details = this.propertyDetails[i2];
					if(this._smartRotation && (details.propertyName == "rotation" || details.propertyName == "rotationX" || details.propertyName == "rotationY" || details.propertyName == "rotationZ")) {
						var rotation = details.change % 360;
						if(rotation > 180) {
							rotation -= 360;
						} else if(rotation < -180) {
							rotation += 360;
						}
						endValue = details.start + rotation * easing;
					} else {
						endValue = details.start + details.change * easing;
					}
					if(!this._snapping) {
						if(details.isField) {
							details.target[details.propertyName] = endValue;
						} else {
							var o1 = details.target;
							var field1 = details.propertyName;
							var tmp2;
							var tmp3;
							if(o1.__properties__) {
								tmp2 = o1.__properties__["set_" + field1];
								tmp3 = tmp2;
							} else {
								tmp3 = false;
							}
							if(tmp3) {
								o1[tmp2](endValue);
							} else {
								o1[field1] = endValue;
							}
						}
					} else {
						var value1 = Math.round(endValue);
						if(details.isField) {
							details.target[details.propertyName] = value1;
						} else {
							var o2 = details.target;
							var field2 = details.propertyName;
							var tmp4;
							var tmp5;
							if(o2.__properties__) {
								tmp4 = o2.__properties__["set_" + field2];
								tmp5 = tmp4;
							} else {
								tmp5 = false;
							}
							if(tmp5) {
								o2[tmp4](value1);
							} else {
								o2[field2] = value1;
							}
						}
					}
				}
			}
			if(tweenPosition == 1) {
				if(this._repeat == 0) {
					this.active = false;
					var tmp6;
					if(this.toggleVisible) {
						var target = this.target;
						var value2 = null;
						if(Object.prototype.hasOwnProperty.call(target,"alpha")) {
							value2 = Reflect.field(target,"alpha");
						} else {
							var tmp7;
							var value3;
							if(target == null) {
								value3 = null;
							} else {
								var value4;
								if(target.__properties__) {
									tmp7 = target.__properties__["get_" + "alpha"];
									value4 = tmp7;
								} else {
									value4 = false;
								}
								if(value4) {
									value3 = target[tmp7]();
								} else {
									value3 = target["alpha"];
								}
							}
							value2 = value3;
						}
						tmp6 = value2 == 0;
					} else {
						tmp6 = false;
					}
					if(tmp6) {
						var target1 = this.target;
						if(Object.prototype.hasOwnProperty.call(target1,"visible")) {
							target1["visible"] = false;
						} else {
							var tmp8;
							var tmp9;
							if(target1.__properties__) {
								tmp8 = target1.__properties__["set_" + "visible"];
								tmp9 = tmp8;
							} else {
								tmp9 = false;
							}
							if(tmp9) {
								target1[tmp8](false);
							} else {
								target1["visible"] = false;
							}
						}
					}
					this.complete(true);
					return;
				} else {
					if(this._onRepeat != null) {
						var method = this._onRepeat;
						var params = this._onRepeatParams;
						if(params == null) {
							params = [];
						}
						method.apply(method,params);
					}
					if(this._reflect) {
						this._reverse = !this._reverse;
					}
					this.startTime = currentTime;
					this.timeOffset = this.startTime + this._delay;
					if(this._repeat > 0) {
						this._repeat--;
					}
				}
			}
			if(this.sendChange) {
				this.change();
			}
		}
	}
	,__class__: motion_actuators_SimpleActuator
});
var motion_easing_Expo = function() { };
$hxClasses["motion.easing.Expo"] = motion_easing_Expo;
motion_easing_Expo.__name__ = ["motion","easing","Expo"];
motion_easing_Expo.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"}
motion_easing_Expo.get_easeIn = function() {
	return new motion_easing_ExpoEaseIn();
};
motion_easing_Expo.get_easeInOut = function() {
	return new motion_easing_ExpoEaseInOut();
};
motion_easing_Expo.get_easeOut = function() {
	return new motion_easing_ExpoEaseOut();
};
var motion_easing_IEasing = function() { };
$hxClasses["motion.easing.IEasing"] = motion_easing_IEasing;
motion_easing_IEasing.__name__ = ["motion","easing","IEasing"];
motion_easing_IEasing.prototype = {
	__class__: motion_easing_IEasing
};
var motion_easing_ExpoEaseOut = function() {
};
$hxClasses["motion.easing.ExpoEaseOut"] = motion_easing_ExpoEaseOut;
motion_easing_ExpoEaseOut.__name__ = ["motion","easing","ExpoEaseOut"];
motion_easing_ExpoEaseOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_ExpoEaseOut.prototype = {
	calculate: function(k) {
		if(k == 1) {
			return 1;
		} else {
			return 1 - Math.pow(2,-10 * k);
		}
	}
	,ease: function(t,b,c,d) {
		if(t == d) {
			return b + c;
		} else {
			return c * (1 - Math.pow(2,-10 * t / d)) + b;
		}
	}
	,__class__: motion_easing_ExpoEaseOut
};
var motion_Actuate = function() { };
$hxClasses["motion.Actuate"] = motion_Actuate;
motion_Actuate.__name__ = ["motion","Actuate"];
motion_Actuate.apply = function(target,properties,customActuator) {
	motion_Actuate.stop(target,properties);
	if(customActuator == null) {
		customActuator = motion_Actuate.defaultActuator;
	}
	var actuator = Type.createInstance(customActuator,[target,0,properties]);
	actuator.apply();
	return actuator;
};
motion_Actuate.getLibrary = function(target,allowCreation) {
	if(allowCreation == null) {
		allowCreation = true;
	}
	if(motion_Actuate.targetLibraries.h.__keys__[target.__id__] == null && allowCreation) {
		motion_Actuate.targetLibraries.set(target,[]);
	}
	return motion_Actuate.targetLibraries.h[target.__id__];
};
motion_Actuate.isActive = function() {
	var result = false;
	var library = motion_Actuate.targetLibraries.iterator();
	while(library.hasNext()) {
		var library1 = library.next();
		result = true;
		break;
	}
	return result;
};
motion_Actuate.motionPath = function(target,duration,properties,overwrite) {
	if(overwrite == null) {
		overwrite = true;
	}
	return motion_Actuate.tween(target,duration,properties,overwrite,motion_actuators_MotionPathActuator);
};
motion_Actuate.pause = function(target) {
	if(js_Boot.__instanceof(target,motion_actuators_IGenericActuator)) {
		var actuator = target;
		actuator.pause();
	} else {
		var library = motion_Actuate.getLibrary(target,false);
		if(library != null) {
			var _g = 0;
			while(_g < library.length) {
				var actuator1 = library[_g];
				++_g;
				actuator1.pause();
			}
		}
	}
};
motion_Actuate.pauseAll = function() {
	var library = motion_Actuate.targetLibraries.iterator();
	while(library.hasNext()) {
		var library1 = library.next();
		var _g = 0;
		while(_g < library1.length) {
			var actuator = library1[_g];
			++_g;
			actuator.pause();
		}
	}
};
motion_Actuate.reset = function() {
	var library = motion_Actuate.targetLibraries.iterator();
	while(library.hasNext()) {
		var library1 = library.next();
		var i = library1.length - 1;
		while(i >= 0) {
			library1[i].stop(null,false,false);
			--i;
		}
	}
	motion_Actuate.targetLibraries = new haxe_ds_ObjectMap();
};
motion_Actuate.resume = function(target) {
	if(js_Boot.__instanceof(target,motion_actuators_IGenericActuator)) {
		var actuator = target;
		actuator.resume();
	} else {
		var library = motion_Actuate.getLibrary(target,false);
		if(library != null) {
			var _g = 0;
			while(_g < library.length) {
				var actuator1 = library[_g];
				++_g;
				actuator1.resume();
			}
		}
	}
};
motion_Actuate.resumeAll = function() {
	var library = motion_Actuate.targetLibraries.iterator();
	while(library.hasNext()) {
		var library1 = library.next();
		var _g = 0;
		while(_g < library1.length) {
			var actuator = library1[_g];
			++_g;
			actuator.resume();
		}
	}
};
motion_Actuate.stop = function(target,properties,complete,sendEvent) {
	if(sendEvent == null) {
		sendEvent = true;
	}
	if(complete == null) {
		complete = false;
	}
	if(target != null) {
		if(js_Boot.__instanceof(target,motion_actuators_IGenericActuator)) {
			var actuator = target;
			actuator.stop(null,complete,sendEvent);
		} else {
			var library = motion_Actuate.getLibrary(target,false);
			if(library != null) {
				if(typeof(properties) == "string") {
					var temp = { };
					temp[properties] = null;
					properties = temp;
				} else if((properties instanceof Array) && properties.__enum__ == null) {
					var temp1 = { };
					var _g = 0;
					var _g1 = js_Boot.__cast(properties , Array);
					while(_g < _g1.length) {
						var property = _g1[_g];
						++_g;
						temp1[property] = null;
					}
					properties = temp1;
				}
				var i = library.length - 1;
				while(i >= 0) {
					library[i].stop(properties,complete,sendEvent);
					--i;
				}
			}
		}
	}
};
motion_Actuate.timer = function(duration,customActuator) {
	return motion_Actuate.tween(new motion__$Actuate_TweenTimer(0),duration,new motion__$Actuate_TweenTimer(1),false,customActuator);
};
motion_Actuate.tween = function(target,duration,properties,overwrite,customActuator) {
	if(overwrite == null) {
		overwrite = true;
	}
	if(target != null) {
		if(duration > 0) {
			if(customActuator == null) {
				customActuator = motion_Actuate.defaultActuator;
			}
			var actuator = Type.createInstance(customActuator,[target,duration,properties]);
			var library = motion_Actuate.getLibrary(actuator.target);
			if(overwrite) {
				var i = library.length - 1;
				while(i >= 0) {
					library[i].stop(actuator.properties,false,false);
					--i;
				}
				library = motion_Actuate.getLibrary(actuator.target);
			}
			library.push(actuator);
			actuator.move();
			return actuator;
		} else {
			return motion_Actuate.apply(target,properties,customActuator);
		}
	}
	return null;
};
motion_Actuate.unload = function(actuator) {
	var target = actuator.target;
	if(motion_Actuate.targetLibraries.h.__keys__[target.__id__] != null) {
		HxOverrides.remove(motion_Actuate.targetLibraries.h[target.__id__],actuator);
		if(motion_Actuate.targetLibraries.h[target.__id__].length == 0) {
			motion_Actuate.targetLibraries.remove(target);
		}
	}
};
motion_Actuate.update = function(target,duration,start,end,overwrite) {
	if(overwrite == null) {
		overwrite = true;
	}
	var properties = { start : start, end : end};
	return motion_Actuate.tween(target,duration,properties,overwrite,motion_actuators_MethodActuator);
};
var motion__$Actuate_TweenTimer = function(progress) {
	this.progress = progress;
};
$hxClasses["motion._Actuate.TweenTimer"] = motion__$Actuate_TweenTimer;
motion__$Actuate_TweenTimer.__name__ = ["motion","_Actuate","TweenTimer"];
motion__$Actuate_TweenTimer.prototype = {
	__class__: motion__$Actuate_TweenTimer
};
var motion_MotionPath = function() {
	this._x = new motion_ComponentPath();
	this._y = new motion_ComponentPath();
	this._rotation = null;
};
$hxClasses["motion.MotionPath"] = motion_MotionPath;
motion_MotionPath.__name__ = ["motion","MotionPath"];
motion_MotionPath.prototype = {
	bezier: function(x,y,controlX,controlY,strength) {
		if(strength == null) {
			strength = 1;
		}
		this._x.addPath(new motion_BezierPath(x,controlX,strength));
		this._y.addPath(new motion_BezierPath(y,controlY,strength));
		return this;
	}
	,line: function(x,y,strength) {
		if(strength == null) {
			strength = 1;
		}
		this._x.addPath(new motion_LinearPath(x,strength));
		this._y.addPath(new motion_LinearPath(y,strength));
		return this;
	}
	,get_rotation: function() {
		if(this._rotation == null) {
			this._rotation = new motion_RotationPath(this._x,this._y);
		}
		return this._rotation;
	}
	,get_x: function() {
		return this._x;
	}
	,get_y: function() {
		return this._y;
	}
	,__class__: motion_MotionPath
	,__properties__: {get_y:"get_y",get_x:"get_x",get_rotation:"get_rotation"}
};
var motion_IComponentPath = function() { };
$hxClasses["motion.IComponentPath"] = motion_IComponentPath;
motion_IComponentPath.__name__ = ["motion","IComponentPath"];
motion_IComponentPath.prototype = {
	__class__: motion_IComponentPath
	,__properties__: {get_end:"get_end"}
};
var motion_ComponentPath = function() {
	this.paths = [];
	this.start = 0;
	this.totalStrength = 0;
};
$hxClasses["motion.ComponentPath"] = motion_ComponentPath;
motion_ComponentPath.__name__ = ["motion","ComponentPath"];
motion_ComponentPath.__interfaces__ = [motion_IComponentPath];
motion_ComponentPath.prototype = {
	addPath: function(path) {
		this.paths.push(path);
		this.totalStrength += path.strength;
	}
	,calculate: function(k) {
		if(this.paths.length == 1) {
			return this.paths[0].calculate(this.start,k);
		} else {
			var ratio = k * this.totalStrength;
			var lastEnd = this.start;
			var _g = 0;
			var _g1 = this.paths;
			while(_g < _g1.length) {
				var path = _g1[_g];
				++_g;
				if(ratio > path.strength) {
					ratio -= path.strength;
					lastEnd = path.end;
				} else {
					return path.calculate(lastEnd,ratio / path.strength);
				}
			}
		}
		return 0;
	}
	,get_end: function() {
		if(this.paths.length > 0) {
			var path = this.paths[this.paths.length - 1];
			return path.end;
		} else {
			return this.start;
		}
	}
	,__class__: motion_ComponentPath
	,__properties__: {get_end:"get_end"}
};
var motion_BezierPath = function(end,control,strength) {
	this.end = end;
	this.control = control;
	this.strength = strength;
};
$hxClasses["motion.BezierPath"] = motion_BezierPath;
motion_BezierPath.__name__ = ["motion","BezierPath"];
motion_BezierPath.prototype = {
	calculate: function(start,k) {
		return (1 - k) * (1 - k) * start + 2 * (1 - k) * k * this.control + k * k * this.end;
	}
	,__class__: motion_BezierPath
};
var motion_LinearPath = function(end,strength) {
	motion_BezierPath.call(this,end,0,strength);
};
$hxClasses["motion.LinearPath"] = motion_LinearPath;
motion_LinearPath.__name__ = ["motion","LinearPath"];
motion_LinearPath.__super__ = motion_BezierPath;
motion_LinearPath.prototype = $extend(motion_BezierPath.prototype,{
	calculate: function(start,k) {
		return start + k * (this.end - start);
	}
	,__class__: motion_LinearPath
});
var motion_RotationPath = function(x,y) {
	this.step = 0.01;
	this._x = x;
	this._y = y;
	this.offset = 0;
	this.start = this.calculate(0.0);
};
$hxClasses["motion.RotationPath"] = motion_RotationPath;
motion_RotationPath.__name__ = ["motion","RotationPath"];
motion_RotationPath.__interfaces__ = [motion_IComponentPath];
motion_RotationPath.prototype = {
	calculate: function(k) {
		var dX = this._x.calculate(k) - this._x.calculate(k + this.step);
		var dY = this._y.calculate(k) - this._y.calculate(k + this.step);
		var angle = Math.atan2(dY,dX) * (180 / Math.PI);
		angle = (angle + this.offset) % 360;
		return angle;
	}
	,get_end: function() {
		return this.calculate(1.0);
	}
	,__class__: motion_RotationPath
	,__properties__: {get_end:"get_end"}
};
var motion_actuators_MethodActuator = function(target,duration,properties) {
	this.currentParameters = [];
	this.tweenProperties = { };
	motion_actuators_SimpleActuator.call(this,target,duration,properties);
	if(!Object.prototype.hasOwnProperty.call(properties,"start")) {
		this.properties.start = [];
	}
	if(!Object.prototype.hasOwnProperty.call(properties,"end")) {
		this.properties.end = this.properties.start;
	}
	var _g1 = 0;
	var _g = this.properties.start.length;
	while(_g1 < _g) {
		var i = _g1++;
		this.currentParameters.push(this.properties.start[i]);
	}
};
$hxClasses["motion.actuators.MethodActuator"] = motion_actuators_MethodActuator;
motion_actuators_MethodActuator.__name__ = ["motion","actuators","MethodActuator"];
motion_actuators_MethodActuator.__super__ = motion_actuators_SimpleActuator;
motion_actuators_MethodActuator.prototype = $extend(motion_actuators_SimpleActuator.prototype,{
	apply: function() {
		var method = this.target;
		var params = this.properties.end;
		if(params == null) {
			params = [];
		}
		method.apply(method,params);
	}
	,complete: function(sendEvent) {
		if(sendEvent == null) {
			sendEvent = true;
		}
		var _g1 = 0;
		var _g = this.properties.start.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.currentParameters[i] = Reflect.field(this.tweenProperties,"param" + i);
		}
		var method = this.target;
		var params = this.currentParameters;
		if(params == null) {
			params = [];
		}
		method.apply(method,params);
		motion_actuators_SimpleActuator.prototype.complete.call(this,sendEvent);
	}
	,initialize: function() {
		var details;
		var propertyName;
		var start;
		var _g1 = 0;
		var _g = this.properties.start.length;
		while(_g1 < _g) {
			var i = _g1++;
			propertyName = "param" + i;
			start = this.properties.start[i];
			this.tweenProperties[propertyName] = start;
			if(typeof(start) == "number" || typeof(start) == "number" && ((start | 0) === start)) {
				details = new motion_actuators_PropertyDetails(this.tweenProperties,propertyName,start,this.properties.end[i] - start);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		motion_actuators_SimpleActuator.prototype.update.call(this,currentTime);
		if(this.active && !this.paused) {
			var _g1 = 0;
			var _g = this.properties.start.length;
			while(_g1 < _g) {
				var i = _g1++;
				this.currentParameters[i] = Reflect.field(this.tweenProperties,"param" + i);
			}
			var method = this.target;
			var params = this.currentParameters;
			if(params == null) {
				params = [];
			}
			method.apply(method,params);
		}
	}
	,__class__: motion_actuators_MethodActuator
});
var motion_actuators_MotionPathActuator = function(target,duration,properties) {
	motion_actuators_SimpleActuator.call(this,target,duration,properties);
};
$hxClasses["motion.actuators.MotionPathActuator"] = motion_actuators_MotionPathActuator;
motion_actuators_MotionPathActuator.__name__ = ["motion","actuators","MotionPathActuator"];
motion_actuators_MotionPathActuator.__super__ = motion_actuators_SimpleActuator;
motion_actuators_MotionPathActuator.prototype = $extend(motion_actuators_SimpleActuator.prototype,{
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(this.target,propertyName)) {
				this.target[propertyName] = (js_Boot.__cast(Reflect.field(this.properties,propertyName) , motion_IComponentPath)).get_end();
			} else {
				var o = this.target;
				var value = (js_Boot.__cast(Reflect.field(this.properties,propertyName) , motion_IComponentPath)).get_end();
				var tmp;
				var tmp1;
				if(o.__properties__) {
					tmp = o.__properties__["set_" + propertyName];
					tmp1 = tmp;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					o[tmp](value);
				} else {
					o[propertyName] = value;
				}
			}
		}
	}
	,initialize: function() {
		var details;
		var path;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			path = js_Boot.__cast(Reflect.field(this.properties,propertyName) , motion_IComponentPath);
			if(path != null) {
				var isField = true;
				if(Object.prototype.hasOwnProperty.call(this.target,propertyName)) {
					path.start = Reflect.field(this.target,propertyName);
				} else {
					isField = false;
					var o = this.target;
					var tmp;
					var tmp1;
					if(o == null) {
						tmp1 = null;
					} else {
						var tmp2;
						if(o.__properties__) {
							tmp = o.__properties__["get_" + propertyName];
							tmp2 = tmp;
						} else {
							tmp2 = false;
						}
						if(tmp2) {
							tmp1 = o[tmp]();
						} else {
							tmp1 = o[propertyName];
						}
					}
					path.start = tmp1;
				}
				details = new motion_actuators_PropertyPathDetails(this.target,propertyName,path,isField);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		if(!this.paused) {
			var details;
			var easing;
			var tweenPosition = (currentTime - this.timeOffset) / this.duration;
			if(tweenPosition > 1) {
				tweenPosition = 1;
			}
			if(!this.initialized) {
				this.initialize();
			}
			if(!this.special) {
				easing = this._ease.calculate(tweenPosition);
				var _g = 0;
				var _g1 = this.propertyDetails;
				while(_g < _g1.length) {
					var details1 = _g1[_g];
					++_g;
					if(details1.isField) {
						details1.target[details1.propertyName] = (js_Boot.__cast(details1 , motion_actuators_PropertyPathDetails)).path.calculate(easing);
					} else {
						var o = details1.target;
						var field = details1.propertyName;
						var value = (js_Boot.__cast(details1 , motion_actuators_PropertyPathDetails)).path.calculate(easing);
						var tmp;
						var tmp1;
						if(o.__properties__) {
							tmp = o.__properties__["set_" + field];
							tmp1 = tmp;
						} else {
							tmp1 = false;
						}
						if(tmp1) {
							o[tmp](value);
						} else {
							o[field] = value;
						}
					}
				}
			} else {
				if(!this._reverse) {
					easing = this._ease.calculate(tweenPosition);
				} else {
					easing = this._ease.calculate(1 - tweenPosition);
				}
				var endValue;
				var _g2 = 0;
				var _g11 = this.propertyDetails;
				while(_g2 < _g11.length) {
					var details2 = _g11[_g2];
					++_g2;
					if(!this._snapping) {
						if(details2.isField) {
							details2.target[details2.propertyName] = (js_Boot.__cast(details2 , motion_actuators_PropertyPathDetails)).path.calculate(easing);
						} else {
							var o1 = details2.target;
							var field1 = details2.propertyName;
							var value1 = (js_Boot.__cast(details2 , motion_actuators_PropertyPathDetails)).path.calculate(easing);
							var tmp2;
							var tmp3;
							if(o1.__properties__) {
								tmp2 = o1.__properties__["set_" + field1];
								tmp3 = tmp2;
							} else {
								tmp3 = false;
							}
							if(tmp3) {
								o1[tmp2](value1);
							} else {
								o1[field1] = value1;
							}
						}
					} else if(details2.isField) {
						details2.target[details2.propertyName] = Math.round((js_Boot.__cast(details2 , motion_actuators_PropertyPathDetails)).path.calculate(easing));
					} else {
						var o2 = details2.target;
						var field2 = details2.propertyName;
						var value2 = Math.round((js_Boot.__cast(details2 , motion_actuators_PropertyPathDetails)).path.calculate(easing));
						var tmp4;
						var tmp5;
						if(o2.__properties__) {
							tmp4 = o2.__properties__["set_" + field2];
							tmp5 = tmp4;
						} else {
							tmp5 = false;
						}
						if(tmp5) {
							o2[tmp4](value2);
						} else {
							o2[field2] = value2;
						}
					}
				}
			}
			if(tweenPosition == 1) {
				if(this._repeat == 0) {
					this.active = false;
					var tmp6;
					if(this.toggleVisible) {
						var target = this.target;
						var value3 = null;
						if(Object.prototype.hasOwnProperty.call(target,"alpha")) {
							value3 = Reflect.field(target,"alpha");
						} else {
							var tmp7;
							var value4;
							if(target == null) {
								value4 = null;
							} else {
								var value5;
								if(target.__properties__) {
									tmp7 = target.__properties__["get_" + "alpha"];
									value5 = tmp7;
								} else {
									value5 = false;
								}
								if(value5) {
									value4 = target[tmp7]();
								} else {
									value4 = target["alpha"];
								}
							}
							value3 = value4;
						}
						tmp6 = value3 == 0;
					} else {
						tmp6 = false;
					}
					if(tmp6) {
						var target1 = this.target;
						if(Object.prototype.hasOwnProperty.call(target1,"visible")) {
							target1["visible"] = false;
						} else {
							var tmp8;
							var tmp9;
							if(target1.__properties__) {
								tmp8 = target1.__properties__["set_" + "visible"];
								tmp9 = tmp8;
							} else {
								tmp9 = false;
							}
							if(tmp9) {
								target1[tmp8](false);
							} else {
								target1["visible"] = false;
							}
						}
					}
					this.complete(true);
					return;
				} else {
					if(this._onRepeat != null) {
						var method = this._onRepeat;
						var params = this._onRepeatParams;
						if(params == null) {
							params = [];
						}
						method.apply(method,params);
					}
					if(this._reflect) {
						this._reverse = !this._reverse;
					}
					this.startTime = currentTime;
					this.timeOffset = this.startTime + this._delay;
					if(this._repeat > 0) {
						this._repeat--;
					}
				}
			}
			if(this.sendChange) {
				this.change();
			}
		}
	}
	,__class__: motion_actuators_MotionPathActuator
});
var motion_actuators_PropertyDetails = function(target,propertyName,start,change,isField) {
	if(isField == null) {
		isField = true;
	}
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.change = change;
	this.isField = isField;
};
$hxClasses["motion.actuators.PropertyDetails"] = motion_actuators_PropertyDetails;
motion_actuators_PropertyDetails.__name__ = ["motion","actuators","PropertyDetails"];
motion_actuators_PropertyDetails.prototype = {
	__class__: motion_actuators_PropertyDetails
};
var motion_actuators_PropertyPathDetails = function(target,propertyName,path,isField) {
	if(isField == null) {
		isField = true;
	}
	motion_actuators_PropertyDetails.call(this,target,propertyName,0,0,isField);
	this.path = path;
};
$hxClasses["motion.actuators.PropertyPathDetails"] = motion_actuators_PropertyPathDetails;
motion_actuators_PropertyPathDetails.__name__ = ["motion","actuators","PropertyPathDetails"];
motion_actuators_PropertyPathDetails.__super__ = motion_actuators_PropertyDetails;
motion_actuators_PropertyPathDetails.prototype = $extend(motion_actuators_PropertyDetails.prototype,{
	__class__: motion_actuators_PropertyPathDetails
});
var motion_easing_ExpoEaseIn = function() {
};
$hxClasses["motion.easing.ExpoEaseIn"] = motion_easing_ExpoEaseIn;
motion_easing_ExpoEaseIn.__name__ = ["motion","easing","ExpoEaseIn"];
motion_easing_ExpoEaseIn.__interfaces__ = [motion_easing_IEasing];
motion_easing_ExpoEaseIn.prototype = {
	calculate: function(k) {
		if(k == 0) {
			return 0;
		} else {
			return Math.pow(2,10 * (k - 1));
		}
	}
	,ease: function(t,b,c,d) {
		if(t == 0) {
			return b;
		} else {
			return c * Math.pow(2,10 * (t / d - 1)) + b;
		}
	}
	,__class__: motion_easing_ExpoEaseIn
};
var motion_easing_ExpoEaseInOut = function() {
};
$hxClasses["motion.easing.ExpoEaseInOut"] = motion_easing_ExpoEaseInOut;
motion_easing_ExpoEaseInOut.__name__ = ["motion","easing","ExpoEaseInOut"];
motion_easing_ExpoEaseInOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_ExpoEaseInOut.prototype = {
	calculate: function(k) {
		if(k == 0) {
			return 0;
		}
		if(k == 1) {
			return 1;
		}
		if((k /= 0.5) < 1.0) {
			return 0.5 * Math.pow(2,10 * (k - 1));
		}
		return 0.5 * (2 - Math.pow(2,-10 * --k));
	}
	,ease: function(t,b,c,d) {
		if(t == 0) {
			return b;
		}
		if(t == d) {
			return b + c;
		}
		if((t /= d / 2.0) < 1.0) {
			return c / 2 * Math.pow(2,10 * (t - 1)) + b;
		}
		return c / 2 * (2 - Math.pow(2,-10 * --t)) + b;
	}
	,__class__: motion_easing_ExpoEaseInOut
};
var motion_easing_Linear = function() { };
$hxClasses["motion.easing.Linear"] = motion_easing_Linear;
motion_easing_Linear.__name__ = ["motion","easing","Linear"];
motion_easing_Linear.__properties__ = {get_easeNone:"get_easeNone"}
motion_easing_Linear.get_easeNone = function() {
	return new motion_easing_LinearEaseNone();
};
var motion_easing_LinearEaseNone = function() {
};
$hxClasses["motion.easing.LinearEaseNone"] = motion_easing_LinearEaseNone;
motion_easing_LinearEaseNone.__name__ = ["motion","easing","LinearEaseNone"];
motion_easing_LinearEaseNone.__interfaces__ = [motion_easing_IEasing];
motion_easing_LinearEaseNone.prototype = {
	calculate: function(k) {
		return k;
	}
	,ease: function(t,b,c,d) {
		return c * t / d + b;
	}
	,__class__: motion_easing_LinearEaseNone
};
var motion_easing_Quad = function() { };
$hxClasses["motion.easing.Quad"] = motion_easing_Quad;
motion_easing_Quad.__name__ = ["motion","easing","Quad"];
motion_easing_Quad.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"}
motion_easing_Quad.get_easeIn = function() {
	return new motion_easing_QuadEaseIn();
};
motion_easing_Quad.get_easeInOut = function() {
	return new motion_easing_QuadEaseInOut();
};
motion_easing_Quad.get_easeOut = function() {
	return new motion_easing_QuadEaseOut();
};
var motion_easing_QuadEaseIn = function() {
};
$hxClasses["motion.easing.QuadEaseIn"] = motion_easing_QuadEaseIn;
motion_easing_QuadEaseIn.__name__ = ["motion","easing","QuadEaseIn"];
motion_easing_QuadEaseIn.__interfaces__ = [motion_easing_IEasing];
motion_easing_QuadEaseIn.prototype = {
	calculate: function(k) {
		return k * k;
	}
	,ease: function(t,b,c,d) {
		return c * (t /= d) * t + b;
	}
	,__class__: motion_easing_QuadEaseIn
};
var motion_easing_QuadEaseInOut = function() {
};
$hxClasses["motion.easing.QuadEaseInOut"] = motion_easing_QuadEaseInOut;
motion_easing_QuadEaseInOut.__name__ = ["motion","easing","QuadEaseInOut"];
motion_easing_QuadEaseInOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_QuadEaseInOut.prototype = {
	calculate: function(k) {
		if((k *= 2) < 1) {
			return 0.5 * k * k;
		}
		return -0.5 * ((k - 1) * (k - 3) - 1);
	}
	,ease: function(t,b,c,d) {
		if((t /= d / 2) < 1) {
			return c / 2 * t * t + b;
		}
		return -c / 2 * ((t - 1) * (t - 3) - 1) + b;
	}
	,__class__: motion_easing_QuadEaseInOut
};
var motion_easing_QuadEaseOut = function() {
};
$hxClasses["motion.easing.QuadEaseOut"] = motion_easing_QuadEaseOut;
motion_easing_QuadEaseOut.__name__ = ["motion","easing","QuadEaseOut"];
motion_easing_QuadEaseOut.__interfaces__ = [motion_easing_IEasing];
motion_easing_QuadEaseOut.prototype = {
	calculate: function(k) {
		return -k * (k - 2);
	}
	,ease: function(t,b,c,d) {
		return -c * (t /= d) * (t - 2) + b;
	}
	,__class__: motion_easing_QuadEaseOut
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses["Bool"] = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
var q = window.jQuery;
var js = js || {}
js.JQuery = q;
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
com_trackware_Channel.__meta__ = { fields : { channel : { isVar : null}}};
com_trackware_HistoryManager.__meta__ = { statics : { instance : { isvar : null}}};
com_trackware_Main.counts = 0;
com_trackware_Map.__meta__ = { statics : { instance : { isVar : null}}, fields : { lat : { isVar : null}, lng : { isVar : null}}};
com_trackware_NodesManager.__meta__ = { statics : { instance : { isVar : null}}};
com_trackware_UsersManager.__meta__ = { statics : { instance : { isVar : null}}};
com_trackware_map_MarkerAbstract.spinner = "<div class=\"spinner\">\r\n        <div class=\"rect1\"></div>\r\n        <div class=\"rect2\"></div>\r\n        <div class=\"rect3\"></div>\r\n        <div class=\"rect4\"></div>\r\n        <div class=\"rect5\"></div>\r\n        </div>";
com_trackware_simulation_SimulationManager.__meta__ = { statics : { instance : { isVar : null}}};
com_trackware_simulation_VirtualRound.__meta__ = { statics : { instance : { isVar : null}}};
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = ({ }).toString;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
motion_actuators_SimpleActuator.actuators = [];
motion_actuators_SimpleActuator.actuatorsLength = 0;
motion_actuators_SimpleActuator.addedEvent = false;
motion_Actuate.defaultActuator = motion_actuators_SimpleActuator;
motion_Actuate.defaultEase = motion_easing_Expo.get_easeOut();
motion_Actuate.targetLibraries = new haxe_ds_ObjectMap();
com_trackware_Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=map.js.map